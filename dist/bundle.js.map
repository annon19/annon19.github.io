{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap d06d0bbfa42be808433c","webpack:///./src/diel/setup.ts","webpack:///external \"React\"","webpack:///external \"d3\"","webpack:///./src/lib/dbHelper.ts","webpack:///./src/lib/chart/chartHelper.ts","webpack:///./src/index.tsx","webpack:///./src/components/Charts/BarChart.tsx","webpack:///./src/diel/workerSetup.ts","webpack:///./src/lib/helper.ts","webpack:///external \"ReactDOM\"","webpack:///./src/components/PageContainer.tsx","webpack:///./src/components/ScrubberView.tsx","webpack:///./src/components/ResetButton.tsx","webpack:///./src/diel/diel.ts","webpack:///external \"SQL\"","webpack:///./src/diel/dielHelper.ts","webpack:///./src/lib/chart/LinearChartHelper.ts","webpack:///./src/lib/chart/CategoricalChartHelper.ts","webpack:///./src/components/ChroniclesFilmStrip.tsx","webpack:///./src/components/StripUnit.tsx","webpack:///./src/lib/config.ts","webpack:///./src/components/Walkthrough.tsx","webpack:///external \"Prism\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","diel_1","diel","default","window","React","d3","assertQueryHasResult","r","query","values","Error","db","sql","exec","length","map","v","columns","Date","toDateString","console","log","join","JSON","stringify","replace","msg","source","timeNow","hashCompare","a","b","aVals","split","bVals","state_1","av","table","bR","filter","bv","prettyTimeNow","toTimeString","substr","downloadHelper","blob","extension","document","createElement","href","URL","createObjectURL","download","onclick","setTimeout","revokeObjectURL","click","downloadQueryResultAsCSV","csvContent","forEach","rowArray","row","Blob","type","rectContains","bounds","x","y","high","low","high2","low2","rectToString","selected","toString","isRect","hasBrushSelection","lightBlue","selectedColor","scatterDark","scatterLight","scatterBaseDark","scatterBaseLight","lightGray","selectedBackgroundColor","brushColor","LayoutInfo","timeLine","width","height","marginBottom","marginLeft","marginRight","marginTop","delays","verticalOrientation","chronDelays","carrier","chronCarrier","state","chronState","day","chronDay","DefaultChartProps","baseFill","showIntro","selectFill","annotations","debug","isChron","chronRank","loadPage","ReactDOM","render","PageContainer_1","PageContainer","getElementById","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","__","constructor","create","ResetButton_1","setup_1","chartHelper_1","LinearChartHelper_1","CategoricalChartHelper_1","BarChart","_super","props","_this","refreshSelection","bind","refreshData","refreshIsLoading","deChronName","chart","slice","toLowerCase","baseData","GetStaticView","isLoading","status","selection","setState","data","componentDidMount","_a","parameters","$chronRank","BindOutput","singleRow","xLabel","isCategorical","clipped","_b","_c","_d","className","style","content","chartWidth","chartHeight","CategoricalChartHelper","linearChartHelper","brushDiv","brush_1","brushX","extent","on","event","sourceEvent","brushSelection","brushFn","Math","min","max","select","move","ref","g","wrap","maxYvalue","apply","xTicks","xAxis","axisBottom","ticks","yAxis","axisLeft","tickSizeOuter","tickXClassName","tickYClassName","Fragment","transform","axesLabels","textAnchor","xFilterBars","rectsSpec","isNaN","barWidth","fill","color","onClick","transformedWidth","transformedHeight","innerContent","selectionText","loadingClass","overflow","ResetButton","disabled","hasSelection","defaultProps","Component","setUpWorker","worker","onmessage","id","args","buffer","dbHelper_1","itxId_1","chart_1","hash_1","sql_1","results","fn","deadRequests","indexOf","helper_1","getLatency","ExperimentLatencyOption","r_1","LatencyOption","High","readFileSync","filename","request","XMLHttpRequest","open","send","responseText","readFileAsync","Promise","resolve","reject","xhr","onload","onerror","statusText","latencyOption","workerSetup_1","None","Low","random","AllCharts","ScatterChartsBrushs","EventType","ScaleOption","HistoryDisplayOption","ScrubberView_1","Walkthrough_1","BarChart_1","ChroniclesFilmStrip_1","config_1","ScrubberView","handleKeyDown","toggleClip","setControl","control","BindFreeze","componentWillMount","IsChronicles","addEventListener","componentWillUnmount","removeEventListener","tick","e","keyCode","Input","deltaItx","$val","prev","LogData","eventLog","$eventName","Clip","$parameter","yLabel","key","slider","float","deleteItx","clear","isTraining","xBrushItx","$chart","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","then","__generator","body","verb","op","f","TypeError","_","t","label","ops","pop","trys","push","sent","throw","return","Symbol","iterator","sql_js_1","__1","dielHelper_1","charts","DBFile","training","main","FilePathPrefix","task","defaultOuptConfig","notNull","Diel","LoadAll","mainFile","workerFile","shouldLoadPage","loadMain","loadWorker","setup","boundFns","output","view","activeRequests","response","bufferRaw","close","fetch","arrayBuffer","Uint8Array","Database","file","postMessage","action","workerLoaded","Worker","reactFn","cIn","has","from","keys","assign","startsWith","GetLogs","logs","getAsObject","staticViews","SetFreeze","frozen","frozenBind","ClearHistory","concat","ts","now","run","processInput","tsI","$ts","create_function","workerGetChartDataView","workerShareItx","input","prepare","navigateItx","$low","$high","logData","thumbnail","thumbnailRemove","taskInfo","taskTimes","answers","memoryTask","$itxId","Map","set","ItxLogsViews","TaskLogsViews","runOutput","Sanity","IsDuringTask","firstTime","duringTask","shareSql","generateSQLForTableCopy","itxId","hash","ChangeToTask","TrainingZeroCount","downloadDB","dRaw","export","downloadWorkerDB","SQL","sharedTable","shareQuery","tableRes","dW","unclippable","yMax","scaleLinear","rangeRound","domain","numBars","xDomain","x1","x2","v1","round","invert","v2","floor","clickFn","scaleBand","padding","selectionOrdinal","$selection","bandwidth","brushBounds","StripUnit_1","ChronicleFilemStrip","hasMoreChron","hasEarlierChron","hasLaterChron","hasLater","hasEarlier","strips","leftArrow","rightArrow","StripUnit","title","isFocus","setTitle","config","labels","l_1","lDiv","substring","$xFilterItxId","Prism","Explanations","queryShown","ifRefresh","text","queryRan","Walkthrough","updateQuery","prevState","highlightAll","resultEle","fontFamily","cell","getHours","getMinutes","getSeconds","result_1","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar diel_1 = __webpack_require__(13);\r\nvar DEBUG = true;\r\nexports.diel = new diel_1.default();\r\nwindow.diel = exports.diel;\r\nif (!DEBUG) {\r\n    console.log = function () { };\r\n}\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = React;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = d3;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction assertQueryHasResult(r, query) {\r\n    if ((!r) || (!r.values)) {\r\n        throw new Error(\"Query \" + query + \" has NO result\");\r\n    }\r\n}\r\nexports.assertQueryHasResult = assertQueryHasResult;\r\n// for console debugging\r\nfunction d(db, sql) {\r\n    var r = db.exec(sql);\r\n    if (r.length > 0) {\r\n        r[0].values.map(function (v) {\r\n            v.map(function (c, i) {\r\n                if (r[0].columns[i] === \"ts\") {\r\n                    c = new Date(c).toDateString();\r\n                }\r\n            });\r\n        });\r\n        console.log(r[0].columns.join(\"\\t\"));\r\n        console.log(JSON.stringify(r[0].values).replace(/\\],\\[/g, \"\\n\").replace(\"[[\", \"\").replace(\"]]\", \"\").replace(/,/g, \"\\t\"));\r\n    }\r\n    else {\r\n        console.log(\"NO RESULT\");\r\n    }\r\n}\r\nexports.d = d;\r\nwindow.d = d;\r\nfunction log(msg, source) {\r\n    console.log(\"[\" + source + \"] \" + msg);\r\n    return 1;\r\n}\r\nexports.log = log;\r\nfunction timeNow() {\r\n    return +new Date();\r\n}\r\nexports.timeNow = timeNow;\r\n// this is needed because the groupby has non deterministic orderings\r\n// and I wasn't able to write a custom reducer\r\n// I suspect this is faster anyways\r\nfunction hashCompare(a, b) {\r\n    // split by -\r\n    var aVals = a.split(\"-\");\r\n    var bVals = b.split(\"-\");\r\n    var _loop_1 = function (i) {\r\n        var av = aVals[i];\r\n        var table = av.split(\":\")[0];\r\n        var bR = bVals.filter(function (bv) { return bv.split(\":\")[0] === table; });\r\n        if (bR.length !== 1) {\r\n            console.log(\"didn't find\", table, bVals);\r\n            return { value: 0 };\r\n        }\r\n        if (bR[0] !== av) {\r\n            return { value: 0 };\r\n        }\r\n    };\r\n    for (var i = 0; i < aVals.length; i++) {\r\n        var state_1 = _loop_1(i);\r\n        if (typeof state_1 === \"object\")\r\n            return state_1.value;\r\n    }\r\n    return 1;\r\n}\r\nexports.hashCompare = hashCompare;\r\nfunction prettyTimeNow() {\r\n    return new Date().toTimeString().substr(0, 8);\r\n}\r\nexports.prettyTimeNow = prettyTimeNow;\r\n/**********************\r\n * Debugging support\r\n *********************/\r\nfunction downloadHelper(blob, name, extension) {\r\n    if (extension === void 0) { extension = \"db\"; }\r\n    var a = document.createElement(\"a\");\r\n    a.href = window.URL.createObjectURL(blob);\r\n    a.download = name + \"_\" + prettyTimeNow() + \".\" + extension;\r\n    a.onclick = function () {\r\n        setTimeout(function () {\r\n            window.URL.revokeObjectURL(a.href);\r\n        }, 1500);\r\n    };\r\n    a.click();\r\n}\r\nexports.downloadHelper = downloadHelper;\r\nfunction downloadQueryResultAsCSV(db, query) {\r\n    var csvContent = \"\";\r\n    var r = db.exec(query);\r\n    if (r.length && r[0].values) {\r\n        csvContent += r[0].columns.join(\",\") + \"\\r\\n\";\r\n        r[0].values.forEach(function (rowArray) {\r\n            var row = rowArray.join(\",\");\r\n            csvContent += row + \"\\r\\n\";\r\n        });\r\n        var b = new Blob([csvContent], { type: \"text/plain;charset=UTF-8\" });\r\n        downloadHelper(b, \"userData.csv\");\r\n        console.log(\"should have downloaded\", csvContent);\r\n    }\r\n    else {\r\n        console.log(\"NO RESULT\");\r\n    }\r\n}\r\nexports.downloadQueryResultAsCSV = downloadQueryResultAsCSV;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.lightBlue = \"rgba(76, 120, 168, 0.5)\";\r\nexports.selectedColor = \"orange\";\r\nexports.scatterDark = \"darkblue\";\r\nexports.scatterLight = \"LemonChiffon\";\r\nexports.scatterBaseDark = \"lightgray\";\r\nexports.scatterBaseLight = \"darkgray\";\r\nexports.lightGray = \"rgba(0, 0, 0, 0.07)\";\r\nexports.selectedBackgroundColor = \"rgba(255, 165, 0, 0.4)\";\r\nexports.brushColor = \"rgba(128,128,128, 0.3)\";\r\nexports.LayoutInfo = {\r\n    timeLine: {\r\n        width: 750,\r\n        height: 80,\r\n        marginBottom: 40,\r\n        marginLeft: 40,\r\n        marginRight: 50,\r\n        marginTop: 25,\r\n    },\r\n    delays: {\r\n        width: 100,\r\n        height: 300,\r\n        marginTop: 1,\r\n        marginBottom: 60,\r\n        marginLeft: 40,\r\n        marginRight: 10,\r\n        verticalOrientation: true\r\n    },\r\n    chronDelays: {\r\n        width: 35,\r\n        height: 70,\r\n        marginTop: 1,\r\n        marginBottom: 1,\r\n        marginLeft: 1,\r\n        marginRight: 1,\r\n        verticalOrientation: true\r\n    },\r\n    // flipped\r\n    carrier: {\r\n        width: 300,\r\n        height: 150,\r\n        marginLeft: 1,\r\n        marginTop: 10,\r\n        marginBottom: 60,\r\n        marginRight: 50,\r\n        verticalOrientation: false,\r\n    },\r\n    chronCarrier: {\r\n        width: 70,\r\n        height: 35,\r\n        marginTop: 1,\r\n        marginBottom: 1,\r\n        marginLeft: 1,\r\n        marginRight: 1,\r\n        verticalOrientation: false\r\n    },\r\n    state: {\r\n        width: 300,\r\n        height: 150,\r\n        marginLeft: 1,\r\n        marginTop: 10,\r\n        marginBottom: 40,\r\n        marginRight: 50,\r\n        verticalOrientation: false,\r\n    },\r\n    chronState: {\r\n        width: 70,\r\n        height: 35,\r\n        marginTop: 1,\r\n        marginBottom: 1,\r\n        marginLeft: 1,\r\n        marginRight: 1,\r\n        verticalOrientation: false\r\n    },\r\n    // flipped\r\n    day: {\r\n        width: 300,\r\n        height: 150,\r\n        marginLeft: 1,\r\n        marginTop: 10,\r\n        marginBottom: 40,\r\n        marginRight: 50,\r\n        verticalOrientation: false,\r\n    },\r\n    chronDay: {\r\n        width: 70,\r\n        height: 35,\r\n        marginTop: 1,\r\n        marginBottom: 1,\r\n        marginLeft: 1,\r\n        marginRight: 1,\r\n        verticalOrientation: false\r\n    }\r\n};\r\nexports.DefaultChartProps = {\r\n    baseFill: exports.lightBlue,\r\n    showIntro: false,\r\n    selectFill: exports.selectedColor,\r\n    annotations: true,\r\n    verticalOrientation: true,\r\n    debug: false,\r\n    isChron: false,\r\n    chronRank: -1\r\n};\r\nfunction rectContains(bounds, x, y) {\r\n    if (!bounds)\r\n        return false;\r\n    return ((x < bounds.high && x > bounds.low) && (y < bounds.high2) && (y > bounds.low2));\r\n}\r\nexports.rectContains = rectContains;\r\nfunction rectToString(selected) {\r\n    if (selected && selected.low && selected.high && selected.low2 && selected.high2) {\r\n        return selected.low.toString() + selected.high.toString() + selected.low2.toString() + selected.high2.toString();\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\nexports.rectToString = rectToString;\r\nfunction isRect(object) {\r\n    return \"x1\" in object && \"x2\" in object;\r\n}\r\n// it's amazing that the syntax highligher knows the following is correct...\r\nfunction hasBrushSelection(s) {\r\n    if (s) {\r\n        if (typeof s === \"string\") {\r\n            return (s.length > 0);\r\n        }\r\n        else if (isRect(s)) {\r\n            return (s.low && s.high && s.low2 && s.high2) ? true : false;\r\n        }\r\n        else {\r\n            return (s.low && s.high) ? true : false;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.hasBrushSelection = hasBrushSelection;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(1);\r\nvar ReactDOM = __webpack_require__(9);\r\nvar PageContainer_1 = __webpack_require__(10);\r\n// this is the place where DIEL should be loaded with the\r\n// generated .db file\r\nfunction loadPage() {\r\n    ReactDOM.render(React.createElement(PageContainer_1.PageContainer, null), document.getElementById(\"wrapper\"));\r\n}\r\nexports.loadPage = loadPage;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(1);\r\nvar d3 = __webpack_require__(2);\r\nvar ResetButton_1 = __webpack_require__(12);\r\nvar setup_1 = __webpack_require__(0);\r\nvar chartHelper_1 = __webpack_require__(4);\r\nvar LinearChartHelper_1 = __webpack_require__(16);\r\nvar CategoricalChartHelper_1 = __webpack_require__(17);\r\nvar BarChart = /** @class */ (function (_super) {\r\n    __extends(BarChart, _super);\r\n    function BarChart(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.refreshSelection = _this.refreshSelection.bind(_this);\r\n        _this.refreshData = _this.refreshData.bind(_this);\r\n        _this.refreshIsLoading = _this.refreshIsLoading.bind(_this);\r\n        var deChronName = props.isChron ? props.chart.slice(5).toLowerCase() : props.chart;\r\n        _this.state = {\r\n            baseData: setup_1.diel.GetStaticView(deChronName + \"ChartInitData\"),\r\n            isLoading: props.isChron ? { status: 0 } : { status: 1 }\r\n        };\r\n        return _this;\r\n    }\r\n    BarChart.prototype.refreshSelection = function (selection) {\r\n        this.setState({ selection: selection });\r\n    };\r\n    BarChart.prototype.refreshData = function (data) {\r\n        this.setState({ data: data });\r\n    };\r\n    BarChart.prototype.refreshIsLoading = function (isLoading) {\r\n        this.setState({\r\n            isLoading: isLoading\r\n        });\r\n    };\r\n    BarChart.prototype.componentDidMount = function () {\r\n        var _a = this.props, chart = _a.chart, isChron = _a.isChron, chronRank = _a.chronRank;\r\n        if (!isChron) {\r\n            setup_1.diel.BindOutput(chart + \"ChartIsLoading\", this.refreshIsLoading, { singleRow: true });\r\n            setup_1.diel.BindOutput(chart + \"ChartDataView\", this.refreshData);\r\n            setup_1.diel.BindOutput(chart + \"ChartSelection\", this.refreshSelection, { singleRow: true });\r\n        }\r\n        else {\r\n            var parameters = { $chronRank: chronRank };\r\n            setup_1.diel.BindOutput(chart + \"ChartDataView\", this.refreshData, { singleRow: false, parameters: parameters });\r\n            setup_1.diel.BindOutput(chart + \"ChartSelection\", this.refreshSelection, { singleRow: true, parameters: parameters });\r\n        }\r\n    };\r\n    BarChart.prototype.render = function () {\r\n        // yLabel\r\n        var _a = this.props, chart = _a.chart, xLabel = _a.xLabel, isCategorical = _a.isCategorical, clipped = _a.clipped, isChron = _a.isChron;\r\n        if (!(this.state && this.state.baseData) || (this.state.baseData.length === 0)) {\r\n            throw new Error(\"Data for chart \" + chart + \" should be here already\");\r\n        }\r\n        // should refactor the following...\r\n        var _b = chartHelper_1.LayoutInfo[chart], marginTop = _b.marginTop, marginRight = _b.marginRight, marginLeft = _b.marginLeft, marginBottom = _b.marginBottom;\r\n        var _c = chartHelper_1.LayoutInfo[chart], width = _c.width, height = _c.height, verticalOrientation = _c.verticalOrientation;\r\n        var _d = this.state, baseData = _d.baseData, selection = _d.selection, data = _d.data, isLoading = _d.isLoading;\r\n        if (isChron && (!data || data.length === 0)) {\r\n            return React.createElement(\"div\", { className: \"chart-container bar-chart\", style: { width: verticalOrientation ? width : height, height: verticalOrientation ? height : width } });\r\n        }\r\n        var chartWidth = width - marginLeft - marginRight;\r\n        var chartHeight = height - marginTop - marginBottom;\r\n        var content;\r\n        var r;\r\n        if (isCategorical) {\r\n            r = CategoricalChartHelper_1.CategoricalChartHelper({\r\n                baseData: baseData, data: data, selection: selection, chart: chart, chartWidth: chartWidth, chartHeight: chartHeight, clipped: clipped\r\n            });\r\n        }\r\n        else {\r\n            r = LinearChartHelper_1.linearChartHelper({\r\n                baseData: baseData, data: data, selection: selection, chart: chart, chartWidth: chartWidth, chartHeight: chartHeight, clipped: clipped\r\n            });\r\n        }\r\n        // console.log(\"returned r\", r);\r\n        var brushDiv;\r\n        // brushing related\r\n        if (!isChron) {\r\n            var brush_1 = d3.brushX()\r\n                .extent([[0, 0], [chartWidth, chartHeight]])\r\n                .on(\"start\", function () {\r\n                // TODO\r\n                // console.log(\"brush started\");\r\n            })\r\n                .on(\"end\", function () {\r\n                // see https://github.com/d3/d3-brush/issues/10\r\n                if (!d3.event.sourceEvent)\r\n                    return; // Only transition after input.\r\n                if (!d3.event.selection)\r\n                    return; // Ignore empty selections.\r\n                var s = d3.brushSelection(this);\r\n                if (s !== null) {\r\n                    r.brushFn(Math.min(s[0], s[1]), Math.max(s[0], s[1]));\r\n                }\r\n                d3.select(this).call(brush_1.move, null);\r\n            });\r\n            brushDiv = React.createElement(\"g\", { ref: function (g) { return d3.select(g).call(brush_1); } });\r\n        }\r\n        // axis rlated\r\n        var tickNum = 5;\r\n        var maxYvalue = this.props.clipped\r\n            ? tickNum\r\n            : this.state.data\r\n                ? Math.min(Math.max.apply(Math, this.state.data.map(function (d) { return d.y; })), tickNum)\r\n                : tickNum;\r\n        var xTicks = baseData.length;\r\n        var xAxis = d3.axisBottom(r.x).ticks(xTicks);\r\n        var yAxis = d3.axisLeft(r.y).ticks(maxYvalue, \"d\").tickSizeOuter(0);\r\n        var tickXClassName = verticalOrientation ? \"\" : \"rotate90x\";\r\n        var tickYClassName = verticalOrientation ? \"textRotate30\" : \"rotate90y\";\r\n        var ticks = React.createElement(React.Fragment, null,\r\n            React.createElement(\"g\", { ref: function (g) { d3.select(g).call(yAxis); }, transform: verticalOrientation ? \"\" : \"translate(\" + chartWidth + \", 0)\", className: tickXClassName }),\r\n            React.createElement(\"g\", { ref: function (g) { d3.select(g).call(xAxis); }, transform: \"translate(0,\" + chartHeight + \")\", className: tickYClassName }));\r\n        var axesLabels = (React.createElement(\"g\", null,\r\n            React.createElement(\"text\", { className: \"chart-label\", x: verticalOrientation ? (chartWidth / 2) + marginLeft : 10, y: verticalOrientation ? height - 5 : width / 2, transform: verticalOrientation ? \"\" : \"rotate(-90, \" + 10 + \", \" + width / 2 + \")\", textAnchor: \"middle\" },\r\n                \" \",\r\n                xLabel)));\r\n        var xFilterBars = r.rectsSpec.map(function (d) {\r\n            if (isNaN(d.x)) {\r\n                console.log(d, chart, r.rectsSpec);\r\n                throw new Error(\"found the nan\");\r\n            }\r\n            return (React.createElement(\"rect\", { className: d.className ? d.className : \"select-bars\", x: d.x, y: d.y, width: d.barWidth, height: chartHeight - d.y, fill: d.color, onClick: isChron ? null : d.onClick }));\r\n        });\r\n        // put them together\r\n        var wrap;\r\n        var transformedWidth = width;\r\n        var transformedHeight = height;\r\n        // note that brush need to have lower z-index because otherwise clicking would not be captured.\r\n        var innerContent = React.createElement(\"g\", { transform: \"translate(\" + marginLeft + \", \" + marginTop + \")\" },\r\n            ticks,\r\n            brushDiv,\r\n            xFilterBars);\r\n        if (verticalOrientation) {\r\n            wrap = innerContent;\r\n        }\r\n        else {\r\n            transformedWidth = height;\r\n            transformedHeight = width;\r\n            // ${height / 2} apparently 0 works well\r\n            wrap = React.createElement(\"g\", { transform: \"translate(\" + transformedWidth + \", 0) rotate(90)\" }, innerContent);\r\n        }\r\n        content = React.createElement(\"svg\", { width: transformedWidth, height: transformedHeight, className: \"chart-svg\" },\r\n            wrap,\r\n            isChron ? null : axesLabels);\r\n        var loadingClass = (!isChron && isLoading.status === 1) ? \"indicatorLine\" : \"\";\r\n        var selectionText;\r\n        if (isCategorical) {\r\n            selectionText = this.state.selection ?\r\n                this.state.selection.selection\r\n                : null;\r\n            selectionText = selectionText\r\n                ? selectionText.length > 10\r\n                    ? selectionText.slice(0, 10) + \"...\"\r\n                    : selectionText\r\n                : null;\r\n        }\r\n        else {\r\n            // get it if it's the same value\r\n            if (this.state.selection) {\r\n                var low = this.state.selection.low;\r\n                var high = this.state.selection.high;\r\n                if (low) {\r\n                    if (low === high) {\r\n                        selectionText = \"\" + low;\r\n                    }\r\n                    else {\r\n                        selectionText = low + \" to \" + high;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return (React.createElement(\"div\", { className: \"chart-container bar-chart\" },\r\n            isChron\r\n                ? null\r\n                : React.createElement(\"div\", { style: { height: 20, overflow: \"hidden\" } },\r\n                    React.createElement(\"p\", { className: \"chart-filter\" }, selectionText ? \"selected \" + selectionText : \" \")),\r\n            content,\r\n            React.createElement(\"div\", { style: { height: 5 }, className: loadingClass }),\r\n            React.createElement(\"div\", null, isChron ? null : React.createElement(ResetButton_1.ResetButton, { width: transformedWidth, disabled: !r.hasSelection, chart: chart, selection: selectionText }))));\r\n    };\r\n    BarChart.defaultProps = chartHelper_1.DefaultChartProps;\r\n    return BarChart;\r\n}(React.Component));\r\nexports.default = BarChart;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helper_1 = __webpack_require__(8);\r\nvar setup_1 = __webpack_require__(0);\r\nvar dbHelper_1 = __webpack_require__(3);\r\nvar LatencyOption;\r\n(function (LatencyOption) {\r\n    LatencyOption[LatencyOption[\"None\"] = 0] = \"None\";\r\n    LatencyOption[LatencyOption[\"Low\"] = 1] = \"Low\";\r\n    LatencyOption[LatencyOption[\"High\"] = 2] = \"High\";\r\n})(LatencyOption = exports.LatencyOption || (exports.LatencyOption = {}));\r\nvar ExperimentLatencyOption = LatencyOption.High;\r\nfunction setUpWorker(worker) {\r\n    worker.onmessage = function (event) {\r\n        setup_1.diel.exec(\"insert into workerCmds values ('\" + event.data.id + \"')\");\r\n        var args = event.data.id.split(\":\");\r\n        var cmd = args[0];\r\n        switch (cmd) {\r\n            case \"download\": {\r\n                var blob = new Blob([event.data.buffer]);\r\n                dbHelper_1.downloadHelper(blob, \"workerSession\");\r\n                break;\r\n            }\r\n            case \"share\": {\r\n                var itxId_1 = args[1];\r\n                var chart_1 = args[2];\r\n                var hash_1 = args[3];\r\n                var sql_1 = \"\";\r\n                // TODO: deal with pagination later\r\n                if (event.data.results[0] && event.data.results[0].values.length > 0) {\r\n                    var values = event.data.results[0].values;\r\n                    // TODO: automtically check for type...\r\n                    var fn = void 0;\r\n                    if (chart_1 === \"day\") {\r\n                        fn = function (r) { return \"(\" + itxId_1 + \", \" + r[0] + \", \" + r[1] + \")\"; };\r\n                    }\r\n                    else {\r\n                        fn = function (r) { return \"(\" + itxId_1 + \", '\" + r[0] + \"', \" + r[1] + \")\"; };\r\n                    }\r\n                    // else if (chart === \"delays\") {\r\n                    //   fn = (r: any) => `(${itxId}, ${r[0]}, ${r[1]}, ${r[2]})`;\r\n                    // } else {\r\n                    // }\r\n                    sql_1 = \"INSERT INTO \" + chart_1 + \"ChartData VALUES \" + values.map(fn) + \";\";\r\n                }\r\n                else {\r\n                    console.log(\"No result for\", chart_1, itxId_1);\r\n                }\r\n                window.setTimeout(function () {\r\n                    if (setup_1.diel.deadRequests.indexOf(hash_1) > -1) {\r\n                        console.log(\"expired\", itxId_1, chart_1);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        // must be here otherwise the time is wrong\r\n                        sql_1 += \"\\nINSERT INTO chartDataAtomic VALUES (\" + dbHelper_1.timeNow() + \", \" + itxId_1 + \", '\" + chart_1 + \"');\";\r\n                        setup_1.diel.exec(sql_1);\r\n                    }\r\n                }, helper_1.getLatency(ExperimentLatencyOption));\r\n                break;\r\n            }\r\n            /**\r\n             * helper calls\r\n             */\r\n            case \"print\": {\r\n                var r_1 = event.data.results;\r\n                if (r_1 && r_1.length > 0) {\r\n                    r_1[0].values.map(function (v) {\r\n                        v.map(function (c, i) {\r\n                            if (r_1[0].columns[i] === \"ts\") {\r\n                                c = new Date(c).toDateString();\r\n                            }\r\n                        });\r\n                    });\r\n                    console.log(\"Printing results\");\r\n                    console.log(r_1[0].columns.join(\"\\t\"));\r\n                    console.log(JSON.stringify(r_1[0].values).replace(/\\],\\[/g, \"\\n\").replace(\"[[\", \"\").replace(\"]]\", \"\").replace(/,/g, \"\\t\"));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n}\r\nexports.setUpWorker = setUpWorker;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar workerSetup_1 = __webpack_require__(7);\r\nexports.ScatterChartsBrushs = [\"arrDelay\", \"depDelay\"];\r\nexports.AllCharts = [\"carrier\", \"day\", \"state\", \"delays\"];\r\nvar EventType;\r\n(function (EventType) {\r\n    EventType[EventType[\"Browser\"] = 0] = \"Browser\";\r\n    EventType[EventType[\"ExpVersion\"] = 1] = \"ExpVersion\";\r\n    EventType[EventType[\"IsMobile\"] = 2] = \"IsMobile\";\r\n    EventType[EventType[\"ScreenWidth\"] = 3] = \"ScreenWidth\";\r\n    EventType[EventType[\"ScreenHeight\"] = 4] = \"ScreenHeight\";\r\n    EventType[EventType[\"WindowWidth\"] = 5] = \"WindowWidth\";\r\n    EventType[EventType[\"WindowHeight\"] = 6] = \"WindowHeight\";\r\n    EventType[EventType[\"IsChronicles\"] = 7] = \"IsChronicles\";\r\n    EventType[EventType[\"HappyOrNot\"] = 8] = \"HappyOrNot\";\r\n    EventType[EventType[\"Clip\"] = 9] = \"Clip\";\r\n    EventType[EventType[\"Focus\"] = 10] = \"Focus\";\r\n    EventType[EventType[\"Blur\"] = 11] = \"Blur\";\r\n})(EventType = exports.EventType || (exports.EventType = {}));\r\n// Note: haven't yet used/implemented\r\nvar ScaleOption;\r\n(function (ScaleOption) {\r\n    ScaleOption[ScaleOption[\"Fixed\"] = 0] = \"Fixed\";\r\n    ScaleOption[ScaleOption[\"Variable\"] = 1] = \"Variable\";\r\n})(ScaleOption = exports.ScaleOption || (exports.ScaleOption = {}));\r\nvar HistoryDisplayOption;\r\n(function (HistoryDisplayOption) {\r\n    HistoryDisplayOption[HistoryDisplayOption[\"SmallMultiples\"] = 0] = \"SmallMultiples\";\r\n    HistoryDisplayOption[HistoryDisplayOption[\"Scrubber\"] = 1] = \"Scrubber\";\r\n    HistoryDisplayOption[HistoryDisplayOption[\"FilmStrip\"] = 2] = \"FilmStrip\";\r\n})(HistoryDisplayOption = exports.HistoryDisplayOption || (exports.HistoryDisplayOption = {}));\r\nfunction readFileSync(filename) {\r\n    var request = new XMLHttpRequest();\r\n    request.open(\"GET\", filename, false); // `false` makes the request synchronous\r\n    request.send(null);\r\n    if (request.status === 200) {\r\n        return request.responseText;\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\nexports.readFileSync = readFileSync;\r\nfunction readFileAsync(filename) {\r\n    return new Promise(function (resolve, reject) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", filename, true);\r\n        xhr.onload = function () { return resolve(xhr.responseText); };\r\n        xhr.onerror = function () { return reject(xhr.statusText); };\r\n        xhr.send();\r\n    });\r\n}\r\nexports.readFileAsync = readFileAsync;\r\nfunction getLatency(latencyOption) {\r\n    if (latencyOption === workerSetup_1.LatencyOption.None) {\r\n        return 0;\r\n    }\r\n    else if (latencyOption === workerSetup_1.LatencyOption.Low) {\r\n        return 500 + Math.random() * 500;\r\n    }\r\n    else {\r\n        return 3000 + Math.random() * 2000;\r\n    }\r\n}\r\nexports.getLatency = getLatency;\r\nfunction isLoading(v) {\r\n    if (!v) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < exports.AllCharts.length; i++) {\r\n        if (v.indexOf(exports.AllCharts[i]) < 0) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.isLoading = isLoading;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = ReactDOM;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(1);\r\nvar ScrubberView_1 = __webpack_require__(11);\r\nvar Walkthrough_1 = __webpack_require__(21);\r\nexports.PageContainer = function () { return (React.createElement(React.Fragment, null,\r\n    React.createElement(\"h2\", null, \"Crossfilter Implemented in DIEL\"),\r\n    React.createElement(\"p\", null, \"The top visualization is a straight forward adaptation of the crossfilter of the flights dataset. The bottom is a design shows a history of past interaction result that are all asycnhronously rendered.\"),\r\n    React.createElement(\"p\", null,\r\n        \"All the interactions, including navigating the small thumbnails are implemented in DIEL. The DIEL part of the source code can be found \",\r\n        React.createElement(\"a\", { href: \"https://github.com/annon19/annon19.github.io\" }, \"here\"),\r\n        \". It also makes use of another database running in a WebWorker. The latency is instrumented to demonstrate how the interface deal with the asynchorny. The rest are standard UI set up (React with D3).\"),\r\n    React.createElement(\"p\", null, \"We provide a basic walk through of some DIEL queries used to specify this interactive visualization.\"),\r\n    React.createElement(ScrubberView_1.default, { showIntro: false }),\r\n    React.createElement(Walkthrough_1.default, null))); };\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(1);\r\nvar BarChart_1 = __webpack_require__(6);\r\nvar setup_1 = __webpack_require__(0);\r\nvar helper_1 = __webpack_require__(8);\r\nvar ChroniclesFilmStrip_1 = __webpack_require__(18);\r\nvar config_1 = __webpack_require__(20);\r\nvar ScrubberView = /** @class */ (function (_super) {\r\n    __extends(ScrubberView, _super);\r\n    function ScrubberView(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.handleKeyDown = _this.handleKeyDown.bind(_this);\r\n        _this.toggleClip = _this.toggleClip.bind(_this);\r\n        _this.setControl = _this.setControl.bind(_this);\r\n        _this.state = {\r\n            control: true,\r\n            clipped: true,\r\n        };\r\n        setup_1.diel.BindFreeze(_this.setControl);\r\n        return _this;\r\n    }\r\n    ScrubberView.prototype.setControl = function (control) {\r\n        this.setState({ control: control });\r\n    };\r\n    ScrubberView.prototype.componentWillMount = function () {\r\n        if (config_1.IsChronicles)\r\n            document.addEventListener(\"keydown\", this.handleKeyDown);\r\n    };\r\n    ScrubberView.prototype.componentWillUnmount = function () {\r\n        if (config_1.IsChronicles)\r\n            document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    };\r\n    ScrubberView.prototype.componentDidMount = function () {\r\n        console.log(\"React all setup, calling tick\");\r\n        setup_1.diel.tick()();\r\n    };\r\n    ScrubberView.prototype.handleKeyDown = function (e) {\r\n        // arrow up/down button should select next/previous list element\r\n        if (e.keyCode === 38 || e.keyCode === 37) {\r\n            setup_1.diel.Input.deltaItx({ $val: -1 });\r\n        }\r\n        else if (e.keyCode === 40 || e.keyCode === 39) {\r\n            setup_1.diel.Input.deltaItx({ $val: 1 });\r\n        }\r\n    };\r\n    ScrubberView.prototype.toggleClip = function () {\r\n        this.setState(function (prev) {\r\n            var clipped = !prev.clipped;\r\n            setup_1.diel.LogData.eventLog({\r\n                $eventName: helper_1.EventType[helper_1.EventType.Clip],\r\n                $parameter: clipped\r\n            });\r\n            return { clipped: clipped };\r\n        });\r\n    };\r\n    ScrubberView.prototype.render = function () {\r\n        var showIntro = this.props.showIntro;\r\n        var _a = this.state, clipped = _a.clipped, control = _a.control;\r\n        var delays = React.createElement(BarChart_1.default\r\n        // ref={v => this.delaysChart = v}\r\n        , { \r\n            // ref={v => this.delaysChart = v}\r\n            clipped: clipped, showIntro: showIntro, chart: \"delays\", xLabel: \"delay\", yLabel: \"count\", key: \"delays\", isCategorical: true });\r\n        var state = React.createElement(BarChart_1.default\r\n        // ref={v => this.stateChart = v}\r\n        , { \r\n            // ref={v => this.stateChart = v}\r\n            clipped: clipped, xLabel: \"state\", yLabel: \"count\", chart: \"state\", isCategorical: true });\r\n        var carrier = React.createElement(BarChart_1.default\r\n        // ref={v => this.carrierChart = v}\r\n        , { \r\n            // ref={v => this.carrierChart = v}\r\n            clipped: clipped, xLabel: \"carrier\", yLabel: \"count\", chart: \"carrier\", isCategorical: true });\r\n        var day = React.createElement(BarChart_1.default\r\n        // ref={v => this.dayChart = v}\r\n        , { \r\n            // ref={v => this.dayChart = v}\r\n            clipped: clipped, xLabel: \"day\", yLabel: \"count\", chart: \"day\", isCategorical: false, showIntro: showIntro });\r\n        var slider = config_1.IsChronicles ? React.createElement(ChroniclesFilmStrip_1.default, null) : null;\r\n        // so when the item is not specified, the field is omitted\r\n        return React.createElement(\"div\", { className: \"vis-portal\" },\r\n            React.createElement(\"div\", { style: { float: \"left\" } },\r\n                React.createElement(\"button\", { className: \"general-btn vis-btn \", style: { width: 75 }, onClick: this.toggleClip },\r\n                    this.state.clipped ? \"\" : \"un\",\r\n                    \"zoom\"),\r\n                config_1.IsChronicles\r\n                    ? React.createElement(\"button\", { className: \"general-btn vis-btn\", onClick: setup_1.diel.Input.deleteItx }, \"clear history\")\r\n                    : null),\r\n            React.createElement(\"br\", { style: { clear: \"both\" } }),\r\n            React.createElement(\"div\", { id: \"all-charts\", className: \"\" + (control ? \"\" : \"dimmed\") },\r\n                React.createElement(\"div\", { className: \"chart-layout-wrapper\" }, state),\r\n                React.createElement(\"div\", { className: \"chart-layout-wrapper\" }, day),\r\n                React.createElement(\"div\", { className: \"chart-layout-wrapper\" }, carrier),\r\n                React.createElement(\"div\", { className: \"chart-layout-wrapper\" },\r\n                    React.createElement(\"div\", { style: { overflow: \"auto\" } }, delays)),\r\n                React.createElement(\"div\", { style: { clear: \"both\" } })),\r\n            React.createElement(\"div\", { className: \"\" + (control ? \"\" : \"dimmed\") },\r\n                slider,\r\n                React.createElement(\"div\", { style: { clear: \"both\" } })));\r\n    };\r\n    ScrubberView.defaultProps = {\r\n        width: 800,\r\n        height: 100,\r\n        isTraining: false,\r\n    };\r\n    return ScrubberView;\r\n}(React.Component));\r\nexports.default = ScrubberView;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(1);\r\nvar setup_1 = __webpack_require__(0);\r\nexports.ResetButton = function (p) {\r\n    if (p.selection && p.selection.length > 0) {\r\n        return React.createElement(\"div\", { style: { height: 30, width: p.width, overflow: \"hidden\" } },\r\n            React.createElement(\"button\", { style: { marginBottom: 10 }, onClick: function () { return setup_1.diel.Input.xBrushItx({ $chart: p.chart }); } }, \"reset\"));\r\n    }\r\n    else {\r\n        return React.createElement(\"div\", { style: { height: 30, width: p.width } });\r\n    }\r\n};\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar sql_js_1 = __webpack_require__(14);\r\nvar __1 = __webpack_require__(5);\r\nvar dbHelper_1 = __webpack_require__(3);\r\nvar dielHelper_1 = __webpack_require__(15);\r\nvar workerSetup_1 = __webpack_require__(7);\r\nvar FilePathPrefix = \"/dist/\";\r\nvar charts = [\"day\", \"carrier\", \"delays\", \"state\"];\r\nvar DBFile = {\r\n    training: {\r\n        main: FilePathPrefix + \"main_training.db\",\r\n        worker: FilePathPrefix + \"worker_training.db\"\r\n    },\r\n    task: {\r\n        main: FilePathPrefix + \"main_task.db\",\r\n        worker: FilePathPrefix + \"worker_task.db\"\r\n    }\r\n};\r\nvar defaultOuptConfig = { singleRow: false, notNull: false };\r\nvar Diel = /** @class */ (function () {\r\n    // public methods\r\n    function Diel() {\r\n        var _this = this;\r\n        this.LoadAll = function (mainFile, workerFile, shouldLoadPage) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        console.log(\"diel Load\", mainFile, workerFile);\r\n                        return [4 /*yield*/, this.loadMain(mainFile)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.loadWorker(workerFile)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        workerSetup_1.setUpWorker(this.worker);\r\n                        // populates all the prepared statements\r\n                        this.setup();\r\n                        // calls react\r\n                        // if diel has been set up already\r\n                        // we need to retarget all the binds\r\n                        // basically find all the view names\r\n                        if (this.boundFns.length > 0) {\r\n                            this.boundFns.map(function (f) {\r\n                                f.s = _this.output.get(f.view);\r\n                            });\r\n                        }\r\n                        this.deadRequests = [];\r\n                        this.activeRequests = [];\r\n                        shouldLoadPage ? __1.loadPage() : null;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        this.loadMain = function (mainFile) { return __awaiter(_this, void 0, void 0, function () {\r\n            var response, bufferRaw;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // if the current db is not null, close it\r\n                        if (this.db) {\r\n                            this.db.close();\r\n                        }\r\n                        return [4 /*yield*/, fetch(mainFile)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.arrayBuffer()];\r\n                    case 2:\r\n                        bufferRaw = _a.sent();\r\n                        this.buffer = new Uint8Array(bufferRaw);\r\n                        this.db = new sql_js_1.Database(this.buffer);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        this.loadWorker = function (file) { return __awaiter(_this, void 0, void 0, function () {\r\n            var response, bufferRaw, buffer;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, fetch(file)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.arrayBuffer()];\r\n                    case 2:\r\n                        bufferRaw = _a.sent();\r\n                        buffer = new Uint8Array(bufferRaw);\r\n                        this.worker.postMessage({\r\n                            id: \"opened\",\r\n                            action: \"open\",\r\n                            buffer: buffer,\r\n                        });\r\n                        this.workerLoaded = true;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        console.log(\"Diel initializing for training\");\r\n        this.LoadAll(DBFile.training.main, DBFile.training.worker, true);\r\n        this.worker = new Worker(\"./dist/worker.sql.js\");\r\n        this.boundFns = [];\r\n        this.workerLoaded = false;\r\n        this.activeRequests = [];\r\n    }\r\n    // has to be done at run time since the react functions need to be constructed.\r\n    Diel.prototype.BindOutput = function (view, reactFn, cIn) {\r\n        if (cIn === void 0) { cIn = {}; }\r\n        // console.log(\"config\", cIn, view);\r\n        if (!this.output.has(view)) {\r\n            throw new Error(\"output not defined \" + view + \" \" + Array.from(this.output.keys()).join(\", \"));\r\n        }\r\n        // immtable assign...\r\n        var c = Object.assign({}, defaultOuptConfig, cIn);\r\n        // console.log(\"final config\", c);\r\n        if (view.startsWith(\"chron\") && !cIn.parameters)\r\n            throw new Error(\"chron must have params\");\r\n        this.boundFns.push({ view: view, s: this.output.get(view), f: reactFn, c: c });\r\n    };\r\n    // SetStateRefresh(f: () => void) {\r\n    //   this.stateRefresh = f;\r\n    // }\r\n    Diel.prototype.GetLogs = function (view) {\r\n        var s = this.logs.get(view);\r\n        if (!s) {\r\n            console.log(view + \" not found in diel logs\", this.logs);\r\n            throw new Error(view + \" not found in diel logs\");\r\n        }\r\n        s.bind({});\r\n        var r = [];\r\n        while (s.step()) {\r\n            r.push(s.getAsObject());\r\n        }\r\n        return r;\r\n    };\r\n    Diel.prototype.GetStaticView = function (view) {\r\n        var s = this.staticViews.get(view);\r\n        s.bind({});\r\n        var r = [];\r\n        while (s.step()) {\r\n            r.push(s.getAsObject());\r\n        }\r\n        if (r.length === 0) {\r\n            throw new Error(\"Static view \" + view + \" should not be empty\");\r\n        }\r\n        return r;\r\n    };\r\n    Diel.prototype.SetFreeze = function (v) {\r\n        this.frozen = v;\r\n        this.frozenBind(!v);\r\n    };\r\n    // hmm, this is not a bad pattern\r\n    // avoids the jumping around\r\n    Diel.prototype.BindFreeze = function (f) {\r\n        this.frozenBind = f;\r\n    };\r\n    /**\r\n     * @all: problematic to delete since there might be memory tasks with dependencies\r\n     */\r\n    Diel.prototype.ClearHistory = function () {\r\n        var _this = this;\r\n        // must be more recent that 10 seconds ago, as GC\r\n        this.deadRequests = this.deadRequests.concat(this.activeRequests).filter(function (r) { return r.ts > Date.now() - 10000; });\r\n        // console.log(\"timeouts right now\", this.deadRequests);\r\n        var tablesWithoutItxId = [\r\n            // non reactive state\r\n            \"eqChart_SP\",\r\n            \"eventLog\",\r\n            // interactions whose itxId are different from those of the brushes\r\n            \"navigateItx\", \"deltaItx\", \"deleteItx\"\r\n        ];\r\n        tablesWithoutItxId.map(function (t) { return _this.db.run(\"delete from \" + t); });\r\n        var tablesWithItxId = [\r\n            // itx state programs\r\n            \"itxId_SP\", \"brushState_SP\", \"brushDep_SP\", \"dataParamHashes_SP\",\r\n            // data state programs\r\n            \"stateChartData\", \"dayChartData\", \"carrierChartData\",\r\n            \"delaysChartData\", \"chartDataAtomic\",\r\n            // brush has to be the last one due to foreign key issues\r\n            \"xBrushItx\",\r\n        ];\r\n        tablesWithItxId.map(function (t) {\r\n            // console.log(\"delteing\", t);\r\n            _this.db.run(\"delete from \" + t + \" where itxId > 4\");\r\n        });\r\n        // force refresh; must via sql\r\n        this.db.run(\"insert into tick (timestep) values (null);\");\r\n        // this.tick()();\r\n    };\r\n    Diel.prototype.processInput = function (s, i) {\r\n        if (this.frozen) {\r\n            return;\r\n        }\r\n        var tsI = Object.assign({ $ts: dbHelper_1.timeNow() }, i);\r\n        s.run(tsI);\r\n    };\r\n    // the rest are private functions\r\n    Diel.prototype.setup = function () {\r\n        var _this = this;\r\n        var db = this.db;\r\n        db.run(\"PRAGMA foreign_keys = ON;\");\r\n        // must do this manually because bundling minimizes the function names...\r\n        db.create_function(\"tick\", this.tick());\r\n        db.create_function(\"workerGetChartDataView\", this.workerGetChartDataView());\r\n        db.create_function(\"workerShareItx\", this.workerShareItx());\r\n        db.create_function(\"timeNow\", dbHelper_1.timeNow);\r\n        db.create_function(\"log\", dbHelper_1.log);\r\n        db.create_function(\"hashCompare\", dbHelper_1.hashCompare);\r\n        this.input = {\r\n            xBrushItx: db.prepare(\"\\n        insert into xBrushItx (ts, chart, low, high, low2, high2, selection)\\n        values ($ts, $chart, $low, $high, $low2, $high2, $selection)\"),\r\n            navigateItx: db.prepare(\"\\n        insert into navigateItx (ts, xFilterItxId)\\n        values ($ts, $xFilterItxId)\"),\r\n            deltaItx: db.prepare(\"\\n        insert into deltaItx (ts, val)\\n        values ($ts, $val)\"),\r\n            deleteItx: db.prepare(\"\\n        insert into deleteItx (ts)\\n        values ($ts)\")\r\n        };\r\n        this.Input = {\r\n            xBrushItx: function (i) {\r\n                if (i.$low) {\r\n                    if (isNaN(i.$high) || isNaN(i.$low)) {\r\n                        throw new Error(\"number has to be defined\");\r\n                    }\r\n                }\r\n                _this.processInput(_this.input.xBrushItx, i);\r\n            },\r\n            navigateItx: function (i) {\r\n                _this.processInput(_this.input.navigateItx, i);\r\n            },\r\n            deltaItx: function (i) {\r\n                _this.processInput(_this.input.deltaItx, i);\r\n            },\r\n            deleteItx: function () {\r\n                _this.input.deleteItx.run({ $ts: dbHelper_1.timeNow() });\r\n            }\r\n        };\r\n        this.logData = {\r\n            thumbnail: db.prepare(\"\\n        insert into thumbnail (ts, itxId, img)\\n        values ($ts, $itxId, $img);\\n      \"),\r\n            thumbnailRemove: db.prepare(\"\\n        delete from thumbnail\\n        where ts < $ts and itxId = $itxId;\\n      \"),\r\n            eventLog: db.prepare(\"\\n        insert into eventLog (ts, eventName, parameter)\\n        values ($ts, $eventName, $parameter);\\n      \"),\r\n            taskInfo: db.prepare(\"\\n        insert into taskInfo (qId, taskType, isTraining)\\n        values ($qId, $taskType, $isTraining);\\n      \"),\r\n            taskTimes: db.prepare(\"\\n        insert into taskTimes (ts, qId, eventType)\\n        values ($ts, $qId, $eventType);\\n      \"),\r\n            answers: db.prepare(\"\\n        insert into answers (qId, answer, confidence, score, comment)\\n        values ($qId, $answer, $confidence, $score, $comment);\\n      \"),\r\n            memoryTask: db.prepare(\"\\n        insert into memoryTask (qId, linkedQId)\\n        values ($qId, $linkedQId);\\n      \")\r\n        };\r\n        // log data should not run process input which has freeze logic\r\n        this.LogData = {\r\n            thumbnail: function (i) {\r\n                var tsI = Object.assign({ $ts: dbHelper_1.timeNow() }, i);\r\n                _this.logData.thumbnail.run(tsI);\r\n                _this.logData.thumbnailRemove.run({ $ts: tsI.$ts, $itxId: i.$itxId });\r\n            },\r\n            eventLog: function (i) {\r\n                var tsI = Object.assign({ $ts: dbHelper_1.timeNow() }, i);\r\n                _this.logData.eventLog.run(tsI);\r\n            },\r\n            taskInfo: function (i) {\r\n                _this.logData.taskInfo.run(i);\r\n            },\r\n            taskTimes: function (i) {\r\n                var tsI = Object.assign({ $ts: dbHelper_1.timeNow() }, i);\r\n                _this.logData.taskTimes.run(tsI);\r\n            },\r\n            answers: function (i) {\r\n                _this.logData.answers.run(i);\r\n            },\r\n            memoryTask: function (i) {\r\n                _this.logData.memoryTask.run(i);\r\n            },\r\n        };\r\n        this.output = new Map();\r\n        // FIXME: when writing the parser, change this directly into code level\r\n        // since it's actually fixed at compile time\r\n        [\r\n            \"ChartSelection\", \"ChartIsLoading\", \"ChartDataView\"\r\n        ].map(function (v) {\r\n            charts.map(function (c) {\r\n                var view = \"\" + c + v;\r\n                _this.output.set(view, db.prepare(\"select * from \" + view));\r\n            });\r\n        });\r\n        this.logs = new Map();\r\n        Diel.ItxLogsViews.map(function (v) { return _this.logs.set(v, db.prepare(\"select * from \" + v)); });\r\n        Diel.TaskLogsViews.map(function (v) { return _this.logs.set(v, db.prepare(\"select * from \" + v)); });\r\n        // one off ones\r\n        // [\"loadingSummary\", \"focusItx\"].map(v => this.output.set(v, db.prepare(`select * from ${v}`)));\r\n        // needs order\r\n        this.output.set(\"thumbnail\", db.prepare(\"select * from thumbnail order by itxId asc\"));\r\n        // set output for chronicles\r\n        // this output is parametrized; lets do that in react...\r\n        // this.chronOutput = new Map();\r\n        // sigh the following should be automated\r\n        [\"chronDayChartSelection\", \"chronCarrierChartSelection\",\r\n            \"chronStateChartSelection\", \"chronDelaysChartSelection\",\r\n            \"chronDayChartDataView\", \"chronStateChartDataView\",\r\n            \"chronCarrierChartDataView\", \"chronDelaysChartDataView\",\r\n            \"chronLoadingStatus\", \"chronChartTitle\"\r\n        ].map(function (v) {\r\n            _this.output.set(v, db.prepare(\"select * from \" + v + \" where chronRank=$chronRank\"));\r\n        });\r\n        // chronicles related\r\n        [\"hasMoreChron\"].map(function (v) { return _this.output.set(v, db.prepare(\"select * from \" + v)); });\r\n        // static ones\r\n        this.staticViews = new Map();\r\n        charts.map(function (c) {\r\n            var view = c + \"ChartInitData\";\r\n            _this.staticViews.set(view, db.prepare(\"select * from \" + view));\r\n        });\r\n    };\r\n    // tick is invoked inside sql (though it can be invoked here sort of as well)\r\n    Diel.prototype.tick = function () {\r\n        var boundFns = this.boundFns;\r\n        var runOutput = this.runOutput;\r\n        return function () {\r\n            // console.log(\"ticked!\", boundFns);\r\n            // const tictime = performance.now();\r\n            boundFns.map(function (b) {\r\n                runOutput(b);\r\n            });\r\n            // console.log(\"tick took\\t\\t\", Math.round(performance.now() - tictime));\r\n        };\r\n    };\r\n    Diel.prototype.Sanity = function () {\r\n        // does some basic sanity check to help developer against dumb mistakes\r\n        // TODO: first is to make sure that all output views are actually bound to something.\r\n    };\r\n    // temp hack\r\n    Diel.prototype.IsDuringTask = function () {\r\n        // console.log(d(`select * from taskTimes`));\r\n        var r = this.db.exec(\"select count(*) from taskTimes\");\r\n        return {\r\n            firstTime: r[0].values[0][0] === 1,\r\n            duringTask: (r[0].values[0][0] % 2) === 1\r\n        };\r\n    };\r\n    Diel.prototype.exec = function (sql) {\r\n        // these should be internal DIEL use\r\n        // e.g., worker code should also be internal\r\n        // console.log(\"DIEL exec\", sql);\r\n        return this.db.exec(sql);\r\n    };\r\n    Diel.prototype.workerShareItx = function () {\r\n        var worker = this.worker;\r\n        return function () {\r\n            // we are going to share currentItx\r\n            // a bit hard coded; need to think about the IR for moving tables around\r\n            var filterQuery = \"SELECT * FROM currentItx\";\r\n            var shareSql = dielHelper_1.generateSQLForTableCopy(\"currentItx\", filterQuery);\r\n            worker.postMessage({\r\n                id: \"updateCurrentItx\",\r\n                action: \"exec\",\r\n                sql: shareSql\r\n            });\r\n        };\r\n    };\r\n    Diel.prototype.workerGetChartDataView = function () {\r\n        var _this = this;\r\n        var worker = this.worker;\r\n        return function (itxId, chart) {\r\n            var hash = dbHelper_1.timeNow() + \"-\" + itxId + \"=\" + chart;\r\n            _this.activeRequests.push({ id: hash, ts: Date.now() });\r\n            worker.postMessage({\r\n                id: \"share:\" + itxId + \":\" + chart + \":\" + hash,\r\n                action: \"exec\",\r\n                sql: \"SELECT * FROM \" + chart + \"ChartDataView;\"\r\n            });\r\n        };\r\n    };\r\n    // only because sql.js does not support user defined aggregates right now\r\n    Diel.prototype.runOutput = function (b) {\r\n        // s: Statement, reactFn: ReactFunc, singleRow: boolean) {\r\n        // takes a statement and a react function\r\n        // console.log(\"updating view\", b.view);\r\n        // const tictime = performance.now();\r\n        var s = b.s, f = b.f, c = b.c;\r\n        if (c.parameters) {\r\n            s.bind(c.parameters);\r\n        }\r\n        else {\r\n            s.bind({});\r\n        }\r\n        var r = [];\r\n        while (s.step()) {\r\n            r.push(s.getAsObject());\r\n        }\r\n        if (c.notNull && r.length === 0) {\r\n            throw new Error(b.view + \" should not be null\");\r\n        }\r\n        if (r.length > 0 && c.singleRow) {\r\n            f(r[0]);\r\n        }\r\n        else {\r\n            f(r);\r\n        }\r\n        // console.log(`${b.view} took\\t\\t`, Math.round(performance.now() - tictime));\r\n        return;\r\n    };\r\n    Diel.prototype.ChangeToTask = function () {\r\n        this.LoadAll(DBFile.task.main, DBFile.task.worker, false);\r\n        console.log(\"Changed to task DB\");\r\n    };\r\n    Diel.prototype.TrainingZeroCount = function () {\r\n        // check if the score for answers are ALL zero\r\n        var r = this.db.exec(\"select count(*) from answers where score = 0\");\r\n        return r[0].values[0][0];\r\n    };\r\n    Diel.prototype.downloadDB = function () {\r\n        // console.log(\"download session\");\r\n        var dRaw = this.db.export();\r\n        var blob = new Blob([dRaw]);\r\n        dbHelper_1.downloadHelper(blob, \"session\");\r\n    };\r\n    Diel.prototype.downloadWorkerDB = function () {\r\n        this.worker.postMessage({\r\n            id: \"download\",\r\n            action: \"export\",\r\n        });\r\n    };\r\n    Diel.ItxLogsViews = [\r\n        // state programs\r\n        \"itxId_SP\", \"brushState_SP\", \"brushDep_SP\",\r\n        \"eqChart_SP\", \"chartDataAtomic\",\r\n        \"eventLog\",\r\n        \"thumbnail\",\r\n        // interactions\r\n        \"navigateItx\", \"deltaItx\", \"deleteItx\",\r\n        \"xBrushItx\"\r\n    ];\r\n    // these will only be deleted when the training switches to task\r\n    // so each time this is sent to ClearHistory, it's not cleared\r\n    // no need to be removed since the entire DB will be dropped\r\n    Diel.TaskLogsViews = [\r\n        // task info\r\n        \"memoryTask\", \"taskTimes\", \"answers\", \"taskInfo\",\r\n    ];\r\n    return Diel;\r\n}());\r\nexports.default = Diel;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = SQL;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar setup_1 = __webpack_require__(0);\r\nvar dbHelper_1 = __webpack_require__(3);\r\n// the input should already be from a group_concat\r\n// they can just specify the remote\r\n// to add the string properly I would need some AST representation for the query definition...\r\n// just going to add quotes to EVERYTHING, since sqlite seems to do the cohersion properly from string to numbers anyways...\r\nfunction generateSQLForTableCopy(sharedTable, shareQuery) {\r\n    var tableRes = setup_1.diel.exec(shareQuery)[0];\r\n    dbHelper_1.assertQueryHasResult(tableRes, \"currentItx\");\r\n    // FIXME: have more robust typing here...\r\n    // need to make null explicit here...\r\n    // selection needs to have a quote around it...\r\n    var values = tableRes.values.map(function (d) { return \"(\" + d.map(function (v) { return (v === null) ? \"null\" : \"'\" + v + \"'\"; }).join(\", \") + \")\"; });\r\n    var shareSql = \"\\n    DELETE from \" + sharedTable + \";\\n    INSERT INTO \" + sharedTable + \" VALUES \" + values + \";\";\r\n    return shareSql;\r\n}\r\nexports.generateSQLForTableCopy = generateSQLForTableCopy;\r\nfunction dW(sql) {\r\n    setup_1.diel.worker.postMessage({\r\n        id: \"print\",\r\n        action: \"exec\",\r\n        sql: sql\r\n    });\r\n}\r\nexports.dW = dW;\r\nwindow.dW = dW;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = __webpack_require__(2);\r\nvar setup_1 = __webpack_require__(0);\r\nvar chartHelper_1 = __webpack_require__(4);\r\nfunction linearChartHelper(p) {\r\n    var baseData = p.baseData, selection = p.selection, data = p.data, chart = p.chart, chartWidth = p.chartWidth, chartHeight = p.chartHeight, clipped = p.clipped;\r\n    var unclippable = (!clipped) && data && (data.length > 0);\r\n    var yMax = unclippable ? d3.max(data, function (d) { return d.y; }) : d3.max(baseData, function (d) { return d.y; });\r\n    var y = d3.scaleLinear().rangeRound([chartHeight, 0]).domain([0, yMax]);\r\n    var extent = d3.extent(baseData, function (d) { return d.x; });\r\n    var numBars = (extent[1] - extent[0] + 1);\r\n    var xDomain = [extent[0], extent[1] + (extent[1] - extent[0]) / numBars];\r\n    var barWidth = chartWidth * 0.6 / numBars;\r\n    var x = d3.scaleLinear().rangeRound([1, chartWidth]).domain(xDomain);\r\n    var brushFn = function (x1, x2) {\r\n        var v1 = Math.round(x.invert(x1));\r\n        var v2 = Math.floor(x.invert(x2));\r\n        console.log(\"brush data\", v1, v2);\r\n        setup_1.diel.Input.xBrushItx({ $low: v1, $high: v2, $chart: chart });\r\n    };\r\n    var clickFn = function (x) { return function () { return setup_1.diel.Input.xBrushItx({ $low: x, $high: x, $chart: chart }); }; };\r\n    var rectsSpec = [];\r\n    var hasSelection = (selection && selection.low) ? true : false;\r\n    // <rect\r\n    // className=\"chart-label\"\r\n    // x={x(selection.low)}\r\n    // y={y(selection.high2)}\r\n    // width={x(selection.high) - x(selection.low)}\r\n    // height={Math.abs(y(selection.high2) - y(selection.low2))}\r\n    // fill={\"gray\"}\r\n    // fill-opacity=\"0.3\"\r\n    // ></rect>\r\n    unclippable ? [] : baseData.map(function (d) {\r\n        var color = selection\r\n            ? (d.x <= selection.high && d.x >= selection.low)\r\n                ? chartHelper_1.selectedBackgroundColor\r\n                : chartHelper_1.lightGray\r\n            : chartHelper_1.lightGray;\r\n        rectsSpec.push({\r\n            x: x(d.x),\r\n            y: y(d.y),\r\n            color: color,\r\n            onClick: clickFn(d.x),\r\n            barWidth: barWidth,\r\n        });\r\n    });\r\n    if (data) {\r\n        data.filter(function (d) { return d.y > 0; }).map(function (d) {\r\n            var color = selection\r\n                ? (d.x <= selection.high && d.x >= selection.low)\r\n                    ? chartHelper_1.selectedColor\r\n                    : chartHelper_1.lightBlue\r\n                : chartHelper_1.lightBlue;\r\n            rectsSpec.push({\r\n                x: x(d.x),\r\n                y: y(d.y),\r\n                color: color,\r\n                onClick: clickFn(d.x),\r\n                barWidth: barWidth,\r\n            });\r\n        });\r\n    }\r\n    if (hasSelection) {\r\n        // this has to be pushed back otherwise click are going to be hard to register...\r\n        rectsSpec.push({\r\n            className: \"selector\",\r\n            x: Math.max(x(selection.low) - 5, 0),\r\n            y: 0,\r\n            barWidth: x(selection.high) - x(selection.low) + barWidth + 10,\r\n            color: chartHelper_1.brushColor,\r\n            onClick: null\r\n        });\r\n    }\r\n    // console.log(`rectspec is`, chartWidth, barWidth, JSON.stringify(rectsSpec));\r\n    return {\r\n        brushFn: brushFn,\r\n        rectsSpec: rectsSpec,\r\n        x: x,\r\n        y: y,\r\n        hasSelection: hasSelection\r\n    };\r\n}\r\nexports.linearChartHelper = linearChartHelper;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = __webpack_require__(2);\r\nvar setup_1 = __webpack_require__(0);\r\nvar chartHelper_1 = __webpack_require__(4);\r\nfunction CategoricalChartHelper(p) {\r\n    var baseData = p.baseData, selection = p.selection, data = p.data, chart = p.chart, chartWidth = p.chartWidth, chartHeight = p.chartHeight, clipped = p.clipped;\r\n    var unclippable = (!clipped) && data && (data.length > 0);\r\n    // scale realted\r\n    var yMax = unclippable ? d3.max(data, function (d) { return d.y; }) : d3.max(baseData, function (d) { return d.y; });\r\n    var y = d3.scaleLinear().rangeRound([chartHeight, 0]).domain([0, yMax]);\r\n    var xDomain = baseData.map(function (d) { return d.x; });\r\n    var x = d3.scaleBand().rangeRound([0, chartWidth]).padding(0.4).domain(xDomain);\r\n    // brushing related\r\n    var brushFn = function (x1, x2) {\r\n        var selectionOrdinal = xDomain.filter(function (v) { return x(v) && (x(v) < x2) && (x(v) > x1); }).join(\",\");\r\n        setup_1.diel.Input.xBrushItx({ $selection: selectionOrdinal, $chart: chart });\r\n    };\r\n    var clickFn = function (x) { return function () { return setup_1.diel.Input.xBrushItx({ $selection: x, $chart: chart }); }; };\r\n    var barWidth = x.bandwidth();\r\n    var rectsSpec = [];\r\n    var brushBounds = [];\r\n    if (selection && selection.selection) {\r\n        selection.selection.split(\",\").map(function (s) { return brushBounds.push(x(s)); });\r\n    }\r\n    // if the value is too low, then also clip on a background selection, but only at the height of half\r\n    baseData.map(function (d) {\r\n        rectsSpec.push({\r\n            x: x(d.x),\r\n            y: chartHeight / 2,\r\n            color: \"rgba(0, 0, 0, 0)\",\r\n            onClick: clickFn(d.x),\r\n            barWidth: barWidth,\r\n        });\r\n    });\r\n    unclippable ? [] : baseData.map(function (d) {\r\n        var color = chartHelper_1.lightGray;\r\n        if (selection && selection.selection) {\r\n            var selects = selection.selection.split(\",\");\r\n            if (selects.filter(function (s) { return s === d.x; }).length > 0) {\r\n                // console.log(\"highlighted selection\", selection.selection, d.x);\r\n                color = chartHelper_1.selectedBackgroundColor;\r\n            }\r\n        }\r\n        rectsSpec.push({\r\n            x: x(d.x), y: y(d.y),\r\n            color: color,\r\n            onClick: clickFn(d.x),\r\n            barWidth: barWidth,\r\n        });\r\n    });\r\n    if (data) {\r\n        data.filter(function (d) { return d.y > 0; }).map(function (d) {\r\n            var color = chartHelper_1.lightBlue;\r\n            if (selection && selection.selection) {\r\n                var selects = selection.selection.split(\",\");\r\n                if (selects.filter(function (s) { return s === d.x; }).length > 0) {\r\n                    color = chartHelper_1.selectedColor;\r\n                }\r\n            }\r\n            rectsSpec.push({\r\n                x: x(d.x), y: y(d.y),\r\n                color: color,\r\n                onClick: clickFn(d.x),\r\n                barWidth: barWidth\r\n            });\r\n        });\r\n    }\r\n    if (brushBounds.length > 0) {\r\n        rectsSpec.push({\r\n            className: \"selector\",\r\n            x: Math.max(d3.min(brushBounds) - 5, 0),\r\n            y: 0,\r\n            color: chartHelper_1.brushColor,\r\n            barWidth: d3.max(brushBounds) - d3.min(brushBounds) + barWidth + 10,\r\n            onClick: null\r\n        });\r\n    }\r\n    var hasSelection = (selection && selection.selection) ? true : false;\r\n    // if (chart === \"delays\" && chartWidth < 60) {\r\n    //   console.log(\"rectsSpec for delays\", rectsSpec);\r\n    // }\r\n    return {\r\n        brushFn: brushFn,\r\n        rectsSpec: rectsSpec,\r\n        x: x,\r\n        y: y,\r\n        hasSelection: hasSelection\r\n    };\r\n}\r\nexports.CategoricalChartHelper = CategoricalChartHelper;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(1);\r\n// import { LayoutInfo } from \"../lib/chart/chartHelper\";\r\n// import { SvgSpinner } from \"./SvgSpinner\";\r\nvar setup_1 = __webpack_require__(0);\r\nvar StripUnit_1 = __webpack_require__(19);\r\nvar ChronicleFilemStrip = /** @class */ (function (_super) {\r\n    __extends(ChronicleFilemStrip, _super);\r\n    function ChronicleFilemStrip(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.hasMoreChron = _this.hasMoreChron.bind(_this);\r\n        _this.state = {\r\n            hasEarlierChron: null,\r\n            hasLaterChron: null\r\n        };\r\n        setup_1.diel.BindOutput(\"hasMoreChron\", _this.hasMoreChron, { singleRow: true });\r\n        return _this;\r\n        // this.focusItx = this.focusItx.bind(this);\r\n    }\r\n    // componentDidMount() {\r\n    //   diel.BindOutput(\"focusItx\", this.focusItx, {singleRow: true});\r\n    // }\r\n    ChronicleFilemStrip.prototype.hasMoreChron = function (data) {\r\n        // console.log(\"has more chron\", data, data.hasEarlier, data.hasEarlier === 1);\r\n        this.setState({\r\n            hasLaterChron: data.hasLater === 1,\r\n            hasEarlierChron: data.hasEarlier === 1\r\n        });\r\n    };\r\n    // loadingSummary(itxIdsInfo: LoadingSummary) {\r\n    //   console.log(\"loading summary called with info\", itxIdsInfo);\r\n    //   this.setState({itxIdsInfo});\r\n    // }\r\n    ChronicleFilemStrip.prototype.render = function () {\r\n        var _a = this.state, hasEarlierChron = _a.hasEarlierChron, hasLaterChron = _a.hasLaterChron;\r\n        // const { width, height } = LayoutInfo.timeLine;\r\n        var strips = [4, 3, 2, 1, 0].map(function (r) { return React.createElement(StripUnit_1.default, { chronRank: r }); });\r\n        var leftArrow = React.createElement(\"span\", { className: (hasEarlierChron ? \"\" : \"hide\") + \" chronArrow\", onClick: function () { return setup_1.diel.Input.deltaItx({ $val: -1 }); } }, \"\\u21E6\");\r\n        var rightArrow = React.createElement(\"span\", { className: (hasLaterChron ? \"\" : \"hide\") + \" chronArrow\", onClick: function () { return setup_1.diel.Input.deltaItx({ $val: 1 }); } }, \"\\u21E8\");\r\n        return React.createElement(\"div\", { className: \"chronContainer\" },\r\n            leftArrow,\r\n            strips,\r\n            rightArrow);\r\n    };\r\n    return ChronicleFilemStrip;\r\n}(React.Component));\r\nexports.default = ChronicleFilemStrip;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(1);\r\nvar setup_1 = __webpack_require__(0);\r\nvar BarChart_1 = __webpack_require__(6);\r\nvar StripUnit = /** @class */ (function (_super) {\r\n    __extends(StripUnit, _super);\r\n    function StripUnit(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            title: null,\r\n            itxId: null,\r\n            isFocus: null,\r\n        };\r\n        _this.setTitle = _this.setTitle.bind(_this);\r\n        // this.setLoading = this.setLoading.bind(this);\r\n        var config = {\r\n            parameters: {\r\n                $chronRank: props.chronRank\r\n            },\r\n            singleRow: true\r\n        };\r\n        setup_1.diel.BindOutput(\"chronChartTitle\", _this.setTitle, config);\r\n        return _this;\r\n        // diel.BindOutput(\"chronLoadingStatus\", this.setLoading, config);\r\n    }\r\n    StripUnit.prototype.setTitle = function (data) {\r\n        this.setState({\r\n            title: data.title,\r\n            itxId: data.itxId,\r\n            isFocus: data.isFocus === 1\r\n        });\r\n    };\r\n    // setLoading(data: {loaded: number}) {\r\n    //   this.setState({isLoading: data.loaded === 0});\r\n    // }\r\n    StripUnit.prototype.render = function () {\r\n        var _this = this;\r\n        var clipped = false;\r\n        var chronRank = this.props.chronRank;\r\n        var delays = React.createElement(BarChart_1.default, { clipped: clipped, chart: \"chronDelays\", isChron: true, chronRank: chronRank, xLabel: \"delay\", yLabel: \"count\", key: \"delays\", isCategorical: true });\r\n        var state = React.createElement(BarChart_1.default, { isChron: true, chronRank: chronRank, clipped: clipped, xLabel: \"chronState\", yLabel: \"count\", chart: \"chronState\", isCategorical: true });\r\n        var carrier = React.createElement(BarChart_1.default, { isChron: true, chronRank: chronRank, clipped: clipped, xLabel: \"carrier\", yLabel: \"count\", chart: \"chronCarrier\", isCategorical: true });\r\n        var day = React.createElement(BarChart_1.default, { isChron: true, chronRank: chronRank, clipped: clipped, xLabel: \"day\", yLabel: \"count\", chart: \"chronDay\", isCategorical: false });\r\n        var labels;\r\n        if (this.state.title) {\r\n            var l_1 = this.state.title.split(\"&\");\r\n            var lDiv = [\"state\", \"day\", \"carrier\", \"delays\"].map(function (c) {\r\n                var v = l_1.filter(function (v) { return v.startsWith(c); });\r\n                var v2 = v.length > 0 ? v[0].substring(c.length + 1) : \"\";\r\n                return React.createElement(\"tr\", null,\r\n                    React.createElement(\"td\", { className: \"label-chart\" }, c),\r\n                    React.createElement(\"td\", { className: \"label-value\" }, v2));\r\n            });\r\n            labels = React.createElement(\"table\", null, lDiv);\r\n        }\r\n        // ? this.state.title : \"none\"\r\n        return React.createElement(\"div\", { className: \"chron\" },\r\n            React.createElement(\"div\", { className: \"chronInner \" + (this.state.isFocus ? \"chronSelected\" : \"\"), onClick: function () { return setup_1.diel.Input.navigateItx({ $xFilterItxId: _this.state.itxId }); } },\r\n                state,\r\n                day,\r\n                carrier,\r\n                delays),\r\n            labels);\r\n    };\r\n    return StripUnit;\r\n}(React.Component));\r\nexports.default = StripUnit;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.IsChronicles = true;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(1);\r\nvar Prism = __webpack_require__(22);\r\nvar setup_1 = __webpack_require__(0);\r\nvar Explanations = [\r\n    {\r\n        queryShown: \"create view dayChartInitDataView as\\n      SELECT\\n        day AS x,\\n        COUNT(*) AS y\\n      FROM flights\\n      GROUP BY day;\",\r\n        ifRefresh: false,\r\n        text: \"The view <i>dayChartInitDataView</i> shows using SQL to query for the static data\",\r\n    },\r\n    {\r\n        queryShown: \"create view lastBrush as\\n      select * from xBrushItx\\n      where itxId = (\\n        SELECT MAX(itxId) AS itxId\\n        FROM xBrushItx\\n      );\",\r\n        queryRan: \"select * from lastBrush\",\r\n        ifRefresh: true,\r\n        text: \"This query derives the latest brush performed; based on the last brush, we can combine with the navigation interactions to define what the combined view is next.\",\r\n    },\r\n    {\r\n        queryShown: \"create view focusItx as\\n      select b.itxId + coalesce(delta.val, 0) as itxId\\n      from lastBrush b\\n      left outer join (\\n      select sum(val) as val\\n      from deltaItx\\n    ) as delta;\",\r\n        queryRan: \"select * from focusItxRaw\",\r\n        ifRefresh: true,\r\n        text: \"Here to combine the navigation with that of the delta navigation interactions, we can just add from past events. There are some additional logic for checking if navigation is out of bounds, which we omit here.\"\r\n    },\r\n    {\r\n        queryShown: \"create view currentItx as\\n      select *\\n      from xBrushItx b\\n      where b.itxId in (\\n        select componentItx\\n        from brushState_SP\\n        where itxId = (select itxId from focusItx)\\n      );\",\r\n        ifRefresh: true,\r\n        queryRan: \"select * from currentItx\",\r\n        text: \"This query illustrates how to make use of state programs to simplify finding the brushes defined in the past. <i>brushState_SP</i> is a state program table that's modified after each <i>xBrushItx</i> to reflect the active set of selected filters. Then <i>currentIt</i> is shared with the WebWorker thread that's computing the values and the response is inserted backed into main thread db as another event---into the respective tables <i>stateChartData</i>.\"\r\n    },\r\n    {\r\n        queryShown: \"CREATE VIEW stateChartDataView AS\\n      SELECT\\n        f.state AS x,\\n        COUNT(*) AS y\\n      FROM flights f\\n      JOIN (\\n        select selection\\n        from currentItx\\n        where chart = 'carrier'\\n      ) AS fCarrier\\n        on (instr(fCarrier.selection, f.carrier)\\n          or fCarrier.selection IS NULL)\\n      JOIN (\\n        select low, high\\n        from currentItx\\n        where chart = 'day'\\n      ) AS fDay\\n        on (\\n          (f.day <= fDay.high and f.day >= fDay.low)\\n          or fDay.low IS NULL)\\n      JOIN (\\n        select selection\\n        from currentItx\\n        where chart = 'delays'\\n      ) AS fDelays\\n        on (\\n          instr(fDelays.selection, f.delay)\\n          or fDelays.selection IS NULL\\n        )\\n    GROUP BY f.state\\n    order by y desc;\",\r\n        ifRefresh: false,\r\n        text: \"This is the query ran on the worker that takes the interact records and computes the filter as one wholistic query. Note that this unified programming model---all the way from interactions to data processing eliminates the need to transform the data from events to objects and to some query language to the backend (or workers), or worse yet, custom rolled functions instead of a standard query engine.\"\r\n    }\r\n];\r\nvar Walkthrough = /** @class */ (function (_super) {\r\n    __extends(Walkthrough, _super);\r\n    function Walkthrough(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.next = _this.next.bind(_this);\r\n        _this.prev = _this.prev.bind(_this);\r\n        _this.updateQuery = _this.updateQuery.bind(_this);\r\n        _this.state = {\r\n            step: 0,\r\n            result: null\r\n        };\r\n        _this.updateQuery();\r\n        return _this;\r\n    }\r\n    Walkthrough.prototype.updateQuery = function () {\r\n        var e = Explanations[this.state.step];\r\n        var result = null;\r\n        if (e.queryRan) {\r\n            result = setup_1.diel.exec(e.queryRan)[0];\r\n        }\r\n        this.setState({ result: result });\r\n    };\r\n    Walkthrough.prototype.next = function () {\r\n        this.setState(function (prevState) { return ({ step: prevState.step + 1 }); });\r\n    };\r\n    Walkthrough.prototype.prev = function () {\r\n        this.setState(function (prevState) { return ({ step: prevState.step - 1 }); });\r\n    };\r\n    Walkthrough.prototype.componentDidMount = function () {\r\n        Prism.highlightAll();\r\n    };\r\n    Walkthrough.prototype.render = function () {\r\n        var result = this.state.result;\r\n        var e = Explanations[this.state.step];\r\n        var resultEle;\r\n        if (result && e.queryRan) {\r\n            resultEle = React.createElement(\"table\", { style: { fontFamily: \"courier\" } },\r\n                React.createElement(\"thead\", null, result.columns.map(function (c) { return React.createElement(\"th\", null, c); })),\r\n                React.createElement(\"tbody\", null, result.values.map(function (r) { return (React.createElement(\"tr\", null, r.map(function (c, i) {\r\n                    var cell = result.columns[i] === \"ts\" ? new Date(c).getHours() + \":\" + new Date(c).getMinutes() + \":\" + new Date(c).getSeconds() : c;\r\n                    cell = ((result.columns[i].toLowerCase().indexOf(\"lat\") > -1) || (result.columns[i].toLowerCase().indexOf(\"long\") > -1)) ? Math.round(cell * 100) / 100 : cell;\r\n                    return (React.createElement(\"td\", null, cell));\r\n                }))); })));\r\n        }\r\n        if (e.queryRan) {\r\n            var result_1 = setup_1.diel.exec(e.queryRan)[0];\r\n            resultEle = React.createElement(\"table\", { style: { fontFamily: \"courier\" } },\r\n                React.createElement(\"thead\", null, result_1.columns.map(function (c) { return React.createElement(\"th\", null, c); })),\r\n                React.createElement(\"tbody\", null, result_1.values.map(function (r) { return (React.createElement(\"tr\", null, r.map(function (c, i) {\r\n                    var cell = result_1.columns[i] === \"ts\" ? new Date(c).getHours() + \":\" + new Date(c).getMinutes() + \":\" + new Date(c).getSeconds() : c;\r\n                    cell = ((result_1.columns[i].toLowerCase().indexOf(\"lat\") > -1) || (result_1.columns[i].toLowerCase().indexOf(\"long\") > -1)) ? Math.round(cell * 100) / 100 : cell;\r\n                    return (React.createElement(\"td\", null, cell));\r\n                }))); })));\r\n        }\r\n        return React.createElement(React.Fragment, null,\r\n            React.createElement(\"p\", { dangerouslySetInnerHTML: { __html: e.text } }),\r\n            React.createElement(\"button\", { className: \"general-btn vis-btn\", disabled: this.state.step < 1, onClick: this.prev }, \"Previous\"),\r\n            React.createElement(\"button\", { className: \"general-btn vis-btn\", disabled: this.state.step >= Explanations.length - 1, onClick: this.next }, \"Next\"),\r\n            e.ifRefresh ? React.createElement(\"button\", { className: \"general-btn vis-btn\", onClick: this.updateQuery }, \"Refresh Query\") : null,\r\n            React.createElement(\"pre\", null,\r\n                React.createElement(\"code\", { className: \"language-sql\" }, e.queryShown)),\r\n            resultEle);\r\n    };\r\n    return Walkthrough;\r\n}(React.Component));\r\nexports.default = Walkthrough;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = Prism;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d06d0bbfa42be808433c","import Diel from \"./diel\";\nconst DEBUG = true;\n\nexport const diel = new Diel();\n(<any>window).diel = diel;\n\nif (!DEBUG) {\n  console.log = () => {};\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/diel/setup.ts","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 1\n// module chunks = 0","module.exports = d3;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3\"\n// module id = 2\n// module chunks = 0","import { QueryResults, Database } from \"sql.js\";\n\nexport function assertQueryHasResult(r: QueryResults, query?: string) {\n  if ((!r) || (!r.values)) {\n    throw new Error(`Query ${query} has NO result`);\n  }\n}\n\n// for console debugging\nexport function d(db: Database, sql: string) {\n  let r = db.exec(sql);\n  if (r.length > 0) {\n    r[0].values.map((v) => {\n      v.map((c, i) => {\n        if (r[0].columns[i] === \"ts\") {\n          c = new Date(c as number).toDateString();\n        }\n      });\n    });\n    console.log(r[0].columns.join(\"\\t\"));\n    console.log(JSON.stringify(r[0].values).replace(/\\],\\[/g, \"\\n\").replace(\"[[\", \"\").replace(\"]]\", \"\").replace(/,/g, \"\\t\"));\n  } else {\n    console.log(\"NO RESULT\");\n  }\n}\n(<any>window).d = d;\n\n\nexport function log(msg: string, source: string) {\n  console.log(`[${source}] ${msg}`);\n  return 1;\n}\n\nexport function timeNow() {\n  return +new Date();\n}\n\n// this is needed because the groupby has non deterministic orderings\n// and I wasn't able to write a custom reducer\n// I suspect this is faster anyways\nexport function hashCompare(a: string, b: string): number {\n  // split by -\n  const aVals = a.split(\"-\");\n  const bVals = b.split(\"-\");\n  for (let i = 0; i < aVals.length; i++) {\n    const av = aVals[i];\n    const table = av.split(\":\")[0];\n    const bR = bVals.filter(bv => bv.split(\":\")[0] === table);\n    if (bR.length !== 1) {\n      console.log(\"didn't find\", table, bVals);\n      return 0;\n    }\n    if (bR[0] !== av) {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nexport function prettyTimeNow() {\n  return new Date().toTimeString().substr(0, 8);\n}\n\n/**********************\n * Debugging support\n *********************/\n\nexport function downloadHelper(blob: Blob, name: string, extension = \"db\") {\n  let a = document.createElement(\"a\");\n  a.href = window.URL.createObjectURL(blob);\n  a.download = `${name}_${prettyTimeNow()}.${extension}`;\n  a.onclick = function() {\n    setTimeout(function() {\n      window.URL.revokeObjectURL(a.href);\n    }, 1500);\n  };\n  a.click();\n}\n\n\nexport function downloadQueryResultAsCSV(db: Database, query: string) {\n  let csvContent = \"\";\n  let r = db.exec(query);\n  if (r.length && r[0].values) {\n    csvContent += r[0].columns.join(\",\") + \"\\r\\n\";\n    r[0].values.forEach((rowArray) => {\n      let row = rowArray.join(\",\");\n      csvContent += row + \"\\r\\n\";\n    });\n    let b = new Blob([csvContent], {type: \"text/plain;charset=UTF-8\"});\n    downloadHelper(b, \"userData.csv\");\n    console.log(\"should have downloaded\", csvContent);\n  } else {\n    console.log(\"NO RESULT\");\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lib/dbHelper.ts","import { AxisScale } from \"d3\";\n\nexport const lightBlue = \"rgba(76, 120, 168, 0.5)\";\nexport const selectedColor = \"orange\";\nexport const scatterDark = \"darkblue\";\nexport const scatterLight = \"LemonChiffon\";\nexport const scatterBaseDark = \"lightgray\";\nexport const scatterBaseLight = \"darkgray\";\nexport const lightGray = \"rgba(0, 0, 0, 0.07)\";\nexport const selectedBackgroundColor = \"rgba(255, 165, 0, 0.4)\";\nexport const brushColor = \"rgba(128,128,128, 0.3)\";\n\n// should be boolean but sqlite does not have boolean type\n export type IsLoading = {status: number};\nexport type LinearBarChartType = { x: number; y: number; }[];\nexport type CategoricalBarChartType = { x: string; y: number; }[];\nexport type BarChartDataType = CategoricalBarChartType | LinearBarChartType;\nexport type ScatterPlotDataType = {x: number, y: number, v: number}[];\nexport type RectSVGSpec = {\n  x: number,\n  y: number,\n  color: string,\n  onClick: () => void,\n  barWidth: number,\n  className?: string;\n}[];\n\nexport interface RangeSelection {low: number; high: number; }\nexport interface StringSelection { selection: string; }\n\nexport interface RectSection {\n  low: number;\n  low2: number;\n  high: number;\n  high2: number;\n}\nexport type BrushSelection = string\n                            | RangeSelection\n                            | RectSection;\n\nexport type ChartHelperReturnValue = {\n    brushFn: (low: number, high: number) => void;\n    rectsSpec: RectSVGSpec;\n    x: AxisScale<any>;\n    y: AxisScale<any>;\n    hasSelection: boolean;\n  };\n\nexport const LayoutInfo: {[index: string]: {\n  width: number, height: number,\n  marginTop: number,\n  marginLeft: number,\n  marginRight: number,\n  marginBottom: number,\n  verticalOrientation?: boolean\n}} = {\n  timeLine: {\n    width: 750,\n    height: 80,\n    marginBottom: 40,\n    marginLeft: 40,\n    marginRight: 50,\n    marginTop: 25,\n  },\n  delays: {\n    width: 100,\n    height: 300,\n    marginTop: 1,\n    marginBottom: 60,\n    marginLeft: 40,\n    marginRight: 10,\n    verticalOrientation: true\n  },\n  chronDelays: {\n    width: 35,\n    height: 70,\n    marginTop: 1,\n    marginBottom: 1,\n    marginLeft: 1,\n    marginRight: 1,\n    verticalOrientation: true\n  },\n  // flipped\n  carrier: {\n    width: 300,\n    height: 150,\n    marginLeft: 1,\n    marginTop: 10,\n    marginBottom: 60,\n    marginRight: 50,\n    verticalOrientation: false,\n  },\n  chronCarrier: {\n    width: 70,\n    height: 35,\n    marginTop: 1,\n    marginBottom: 1,\n    marginLeft: 1,\n    marginRight: 1,\n    verticalOrientation: false\n  },\n  state: {\n    width: 300,\n    height: 150,\n    marginLeft: 1,\n    marginTop: 10,\n    marginBottom: 40,\n    marginRight: 50,\n    verticalOrientation: false,\n  },\n  chronState: {\n    width: 70,\n    height: 35,\n    marginTop: 1,\n    marginBottom: 1,\n    marginLeft: 1,\n    marginRight: 1,\n    verticalOrientation: false\n  },\n  // flipped\n  day: {\n    width: 300,\n    height: 150,\n    marginLeft: 1,\n    marginTop: 10,\n    marginBottom: 40,\n    marginRight: 50,\n    verticalOrientation: false,\n  },\n  chronDay: {\n    width: 70,\n    height: 35,\n    marginTop: 1,\n    marginBottom: 1,\n    marginLeft: 1,\n    marginRight: 1,\n    verticalOrientation: false\n  }\n};\n\nexport interface SharedChartConfig {\n  baseFill: string;\n  selectFill: string;\n  showIntro: boolean;\n  annotations: boolean;\n  verticalOrientation: boolean;\n  debug: boolean;\n  isChron: boolean;\n  chronRank: number;\n}\n\nexport interface SharedChartProps extends Partial<SharedChartConfig> {\n  chart: string;\n  // the following are all provided directly via configurations\n  // height: number;\n  // width: number;\n  // marginBottom: number;\n  // marginLeft: number;\n  // marginRight: number;\n  // marginTop: number;\n  xLabel: string;\n  yLabel: string;\n}\n\nexport const DefaultChartProps: SharedChartConfig = {\n  baseFill: lightBlue,\n  showIntro: false,\n  selectFill: selectedColor,\n  annotations: true,\n  verticalOrientation: true,\n  debug: false,\n  isChron: false,\n  chronRank: -1\n};\n\nexport function rectContains(bounds: RectSection, x: number, y: number) {\n  if (!bounds) return false;\n  return ((x < bounds.high && x > bounds.low) && (y < bounds.high2) && (y > bounds.low2));\n}\n\nexport function rectToString(selected: RectSection) {\n  if (selected && selected.low && selected.high && selected.low2 && selected.high2) {\n    return selected.low.toString() + selected.high.toString() + selected.low2.toString() + selected.high2.toString();\n  } else {\n    return \"\";\n  }\n}\n\n\nfunction isRect(object: any): object is RectSection {\n  return \"x1\" in object && \"x2\" in object;\n}\n\n// it's amazing that the syntax highligher knows the following is correct...\nexport function hasBrushSelection(s: BrushSelection | RectSection): boolean {\n  if (s) {\n    if (typeof s === \"string\") {\n      return (s.length > 0);\n    } else if (isRect(s)) {\n      return (s.low && s.high && s.low2 && s.high2) ? true : false;\n    } else {\n      return (s.low && s.high) ? true : false;\n    }\n  }\n  return false;\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lib/chart/chartHelper.ts","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { PageContainer } from \"./components/PageContainer\";\n\n// this is the place where DIEL should be loaded with the\n// generated .db file\nexport function loadPage() {\n  ReactDOM.render(\n    <PageContainer/>,\n    document.getElementById(\"wrapper\")\n  );\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/index.tsx","import * as React from \"react\";\nimport * as d3 from \"d3\";\n\nimport { ResetButton } from \"../ResetButton\";\nimport { diel } from \"../../diel/setup\";\nimport {  RangeSelection, BarChartDataType, StringSelection,\n  DefaultChartProps, SharedChartProps,\n  ChartHelperReturnValue, IsLoading, LayoutInfo} from \"../../lib/chart/chartHelper\";\n\nimport { linearChartHelper, LinearChartProps } from \"../../lib/chart/LinearChartHelper\";\nimport { CategoricalChartHelper, CategoricalChartProps } from \"../../lib/chart/CategoricalChartHelper\";\n\ninterface BarChartProps extends SharedChartProps {\n  isCategorical: boolean;\n  clipped: boolean;\n}\n\ninterface BarChartState {\n  baseData: BarChartDataType;\n  isLoading: IsLoading;\n  data?: BarChartDataType;\n  selection?: RangeSelection | StringSelection;\n}\n\nexport default class BarChart extends React.Component<BarChartProps, BarChartState> {\n  static defaultProps = DefaultChartProps;\n\n  constructor(props: BarChartProps) {\n    super(props);\n    this.refreshSelection = this.refreshSelection.bind(this);\n    this.refreshData = this.refreshData.bind(this);\n    this.refreshIsLoading = this.refreshIsLoading.bind(this);\n    const deChronName = props.isChron ? props.chart.slice(5).toLowerCase() : props.chart;\n    this.state = {\n      baseData: diel.GetStaticView(`${deChronName}ChartInitData`) as BarChartDataType,\n      isLoading: props.isChron ? {status: 0} : {status: 1}\n    };\n  }\n\n  refreshSelection(selection: RangeSelection | StringSelection) {\n    this.setState({ selection });\n  }\n\n  refreshData(data: BarChartDataType) {\n    this.setState({data});\n  }\n\n  refreshIsLoading(isLoading: IsLoading) {\n    this.setState({\n      isLoading\n    });\n  }\n\n  componentDidMount() {\n    const { chart, isChron, chronRank } = this.props;\n    if (!isChron) {\n      diel.BindOutput(`${chart}ChartIsLoading`, this.refreshIsLoading, {singleRow: true});\n      diel.BindOutput(`${chart}ChartDataView`, this.refreshData);\n      diel.BindOutput(`${chart}ChartSelection`, this.refreshSelection, {singleRow: true});\n    } else {\n      const parameters = {$chronRank: chronRank};\n      diel.BindOutput(`${chart}ChartDataView`, this.refreshData, {singleRow: false, parameters});\n      diel.BindOutput(`${chart}ChartSelection`, this.refreshSelection, {singleRow: true, parameters});\n    }\n  }\n\n  render() {\n    // yLabel\n    let { chart, xLabel, isCategorical, clipped, isChron } = this.props;\n\n    if (!(this.state && this.state.baseData) || (this.state.baseData.length === 0))  {\n      throw new Error(`Data for chart ${chart} should be here already`);\n    }\n    // should refactor the following...\n    const {marginTop, marginRight, marginLeft, marginBottom} = LayoutInfo[chart];\n    let { width, height, verticalOrientation } = LayoutInfo[chart];\n    let { baseData, selection, data, isLoading } = this.state;\n\n    if (isChron && (!data || data.length === 0)) {\n      return <div\n          className=\"chart-container bar-chart\"\n          style={{width: verticalOrientation ? width : height, height: verticalOrientation ? height : width}}>\n        </div>;\n    }\n    const chartWidth = width! - marginLeft! - marginRight!;\n    const chartHeight = height! - marginTop! - marginBottom!;\n\n    let content: JSX.Element;\n    let r: ChartHelperReturnValue;\n    if (isCategorical) {\n      r = CategoricalChartHelper({\n        baseData, data, selection, chart, chartWidth, chartHeight, clipped\n      } as CategoricalChartProps);\n    } else {\n      r = linearChartHelper({\n        baseData, data, selection, chart, chartWidth, chartHeight, clipped\n      } as LinearChartProps);\n    }\n    // console.log(\"returned r\", r);\n\n    let brushDiv: JSX.Element;\n    // brushing related\n    if (!isChron) {\n      const brush = d3.brushX()\n      .extent([[0, 0], [chartWidth, chartHeight]])\n      .on(\"start\", function() {\n        // TODO\n        // console.log(\"brush started\");\n      })\n      .on(\"end\", function() {\n        // see https://github.com/d3/d3-brush/issues/10\n        if (!d3.event.sourceEvent) return; // Only transition after input.\n        if (!d3.event.selection) return; // Ignore empty selections.\n        const s = d3.brushSelection(this) as [number, number];\n        if (s !== null) {\n          r.brushFn(Math.min(s[0], s[1]), Math.max(s[0], s[1]));\n        }\n        d3.select(this).call(brush.move, null);\n      });\n      brushDiv = <g ref={ g => d3.select(g).call(brush as any) }></g>;\n    }\n\n    // axis rlated\n    const tickNum = 5;\n    const maxYvalue = this.props.clipped\n                        ? tickNum\n                        : this.state.data\n                          ? Math.min(Math.max(...(this.state.data as any).map((d: any) => d.y)), tickNum)\n                          : tickNum;\n    const xTicks = baseData.length;\n    let xAxis = d3.axisBottom(r.x).ticks(xTicks);\n    let yAxis = d3.axisLeft(r.y).ticks(maxYvalue, \"d\").tickSizeOuter(0);\n    const tickXClassName = verticalOrientation ? \"\" : \"rotate90x\";\n    const tickYClassName = verticalOrientation ? \"textRotate30\" : \"rotate90y\";\n    const ticks = <>\n      <g ref={(g) => {d3.select(g).call(yAxis as any); }}\n        transform={verticalOrientation ? \"\" : `translate(${chartWidth}, 0)`}\n          className={tickXClassName}></g>\n      <g ref={(g) => { d3.select(g).call(xAxis as any); }}\n        transform={`translate(0,` + chartHeight + \")\"}\n        className={tickYClassName}></g></>;\n    const axesLabels = (\n      <g>\n        <text\n          className=\"chart-label\"\n          x={verticalOrientation ? (chartWidth / 2) + marginLeft : 10}\n          y={verticalOrientation ? height - 5 : width / 2}\n          transform={verticalOrientation ? `` : `rotate(-90, ${10}, ${width / 2})`}\n          textAnchor=\"middle\"\n        > {xLabel}\n        </text>\n      </g>);\n\n    let xFilterBars = r.rectsSpec.map(d => {\n      if (isNaN(d.x)) {\n        console.log(d, chart, r.rectsSpec);\n        throw new Error(`found the nan`);\n      }\n      return (<rect\n                className={d.className ? d.className : \"select-bars\"}\n                x={d.x}\n                y={d.y}\n                width={d.barWidth}\n                height={chartHeight - d.y}\n                fill={d.color}\n                onClick={isChron ? null : d.onClick}\n                ></rect>);\n    });\n    // put them together\n    let wrap: JSX.Element;\n    let transformedWidth = width;\n    let transformedHeight = height;\n    // note that brush need to have lower z-index because otherwise clicking would not be captured.\n    let innerContent = <g transform={`translate(${marginLeft}, ${marginTop})`} >\n        {ticks}\n        {brushDiv}\n        {xFilterBars}\n      </g>;\n    if (verticalOrientation) {\n      wrap = innerContent;\n    } else {\n      transformedWidth = height;\n      transformedHeight = width;\n      // ${height / 2} apparently 0 works well\n      wrap = <g transform={`translate(${transformedWidth}, 0) rotate(90)`}>{innerContent}</g>;\n    }\n\n    content = <svg width={transformedWidth} height={transformedHeight} className=\"chart-svg\">\n      {wrap}\n      {isChron ? null : axesLabels}\n    </svg>;\n    const loadingClass = (!isChron && isLoading.status === 1) ? \"indicatorLine\" : \"\";\n\n    let selectionText;\n    if (isCategorical) {\n      selectionText = this.state.selection ?\n        (this.state.selection as StringSelection).selection\n        : null;\n      selectionText = selectionText\n        ? selectionText.length > 10\n          ? selectionText.slice(0, 10) + \"...\"\n          : selectionText\n        : null;\n    } else {\n      // get it if it's the same value\n      if (this.state.selection) {\n        const low = (this.state.selection as RangeSelection).low;\n        const high = (this.state.selection as RangeSelection).high;\n        if (low) {\n          if (low === high) {\n            selectionText = `${low}`;\n          } else {\n            selectionText = `${low} to ${high}`;\n          }\n        }\n      }\n    }\n    return(<div className=\"chart-container bar-chart\">\n      {isChron\n        ? null\n        : <div style={{height: 20, overflow: \"hidden\"}}>\n            <p className=\"chart-filter\">{selectionText ? `selected ${selectionText}` : \" \"}</p>\n          </div>}\n      {content}\n      <div style={{height: 5}} className={loadingClass}></div>\n      <div>\n      {isChron ? null :  <ResetButton\n          width={transformedWidth}\n          disabled={!r.hasSelection}\n          chart={chart}\n          selection={selectionText}\n        />}\n      </div>\n    </div>);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/Charts/BarChart.tsx","\nimport { getLatency } from \"../lib/helper\";\nimport { diel } from \"./setup\";\nimport { downloadHelper, timeNow } from \"../lib/dbHelper\";\n\nexport enum LatencyOption {\n  None,\n  Low,\n  High\n}\nconst ExperimentLatencyOption = LatencyOption.High;\nexport function setUpWorker(worker: Worker) {\n  worker.onmessage = function(event) {\n    diel.exec(`insert into workerCmds values ('${event.data.id}')`);\n    const args = event.data.id.split(\":\");\n    const cmd = args[0];\n    switch (cmd) {\n      case \"download\": {\n        let blob = new Blob([event.data.buffer]);\n        downloadHelper(blob, \"workerSession\");\n        break;\n      }\n      case \"share\": {\n        const itxId = args[1];\n        const chart = args[2];\n        const hash = args[3];\n        let sql: string = \"\";\n        // TODO: deal with pagination later\n        if (event.data.results[0] && event.data.results[0].values.length > 0) {\n          const values = event.data.results[0].values;\n          // TODO: automtically check for type...\n          let fn: (r: any) => string;\n          if (chart === \"day\") {\n            fn = (r: any) => `(${itxId}, ${r[0]}, ${r[1]})`;\n          } else {\n            fn = (r: any) => `(${itxId}, '${r[0]}', ${r[1]})`;\n          }\n          // else if (chart === \"delays\") {\n          //   fn = (r: any) => `(${itxId}, ${r[0]}, ${r[1]}, ${r[2]})`;\n          // } else {\n          // }\n          sql = `INSERT INTO ${chart}ChartData VALUES ${values.map(fn)};`;\n        } else {\n          console.log(\"No result for\", chart, itxId);\n        }\n        window.setTimeout(() => {\n          if (diel.deadRequests.indexOf(hash) > -1) {\n            console.log(\"expired\", itxId, chart);\n            return;\n          } else {\n            // must be here otherwise the time is wrong\n            sql += `\\nINSERT INTO chartDataAtomic VALUES (${timeNow()}, ${itxId}, '${chart}');`;\n            diel.exec(sql);\n          }\n        }, getLatency(ExperimentLatencyOption));\n        break;\n      }\n      /**\n       * helper calls\n       */\n      case \"print\": {\n        let r = event.data.results;\n        if (r && r.length > 0) {\n          r[0].values.map((v: any) => {\n            v.map((c: any, i: any) => {\n              if (r[0].columns[i] === \"ts\") {\n                c = new Date(c as number).toDateString();\n              }\n            });\n          });\n          console.log(\"Printing results\");\n          console.log(r[0].columns.join(\"\\t\"));\n          console.log(JSON.stringify(r[0].values).replace(/\\],\\[/g, \"\\n\").replace(\"[[\", \"\").replace(\"]]\", \"\").replace(/,/g, \"\\t\"));\n        }\n        break;\n      }\n    }\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/diel/workerSetup.ts","import { LatencyOption } from \"../diel/workerSetup\";\n\nexport const ScatterChartsBrushs = [\"arrDelay\", \"depDelay\"];\nexport const AllCharts = [\"carrier\", \"day\", \"state\", \"delays\"];\n\n\nexport enum EventType {\n  Browser,\n  ExpVersion,\n  IsMobile, // true/false\n  ScreenWidth,\n  ScreenHeight,\n  WindowWidth,\n  WindowHeight,\n  IsChronicles, // a label for whether it is chronicles\n  HappyOrNot,\n  Clip,\n  Focus,\n  Blur\n}\n\n\n// Note: haven't yet used/implemented\nexport enum ScaleOption {\n  Fixed,\n  Variable\n}\n\nexport enum HistoryDisplayOption {\n  SmallMultiples,\n  Scrubber,\n  FilmStrip\n}\n\nexport function readFileSync(filename: string): string {\n  let request = new XMLHttpRequest();\n  request.open(\"GET\", filename, false);  // `false` makes the request synchronous\n  request.send(null);\n  if (request.status === 200) {\n    return request.responseText;\n  } else {\n    return \"\";\n  }\n}\n\nexport function readFileAsync(filename: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", filename, true);\n    xhr.onload = () => resolve(xhr.responseText);\n    xhr.onerror = () => reject(xhr.statusText);\n    xhr.send();\n  });\n}\n\nexport function getLatency(latencyOption: LatencyOption) {\n  if (latencyOption === LatencyOption.None) {\n    return 0;\n  } else if (latencyOption === LatencyOption.Low) {\n    return 500 + Math.random() * 500;\n  } else {\n    return 3000 + Math.random() * 2000;\n  }\n}\n\nexport function isLoading(v: string) {\n  if (!v) {\n    return true;\n  }\n  for (let i = 0; i < AllCharts.length; i ++) {\n    if (v.indexOf(AllCharts[i]) < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lib/helper.ts","module.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 9\n// module chunks = 0","import * as React from \"react\";\nimport ScrubberView from \"./ScrubberView\";\nimport Walkthrough from \"./Walkthrough\";\n\nexport const PageContainer = () => (<>\n  <h2>\n    Crossfilter Implemented in DIEL\n  </h2>\n  <p>\n    The top visualization is a straight forward adaptation of the crossfilter of the flights dataset. The bottom is a design shows a history of past interaction result that are all asycnhronously rendered.\n  </p>\n  <p>\n    All the interactions, including navigating the small thumbnails are implemented in DIEL. The DIEL part of the source code can be found <a href=\"https://github.com/annon19/annon19.github.io\">here</a>. It also makes use of another database running in a WebWorker.\n    The latency is instrumented to demonstrate how the interface deal with the asynchorny.\n    The rest are standard UI set up (React with D3).\n  </p>\n  <p>\n    We provide a basic walk through of some DIEL queries used to specify this interactive visualization.\n  </p>\n  <ScrubberView\n    showIntro={false}\n  />\n  <Walkthrough/>\n</>);\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/PageContainer.tsx","import * as React from \"react\";\n\nimport BarChart from \"./Charts/BarChart\";\nimport { diel } from \"../diel/setup\";\nimport { EventType } from \"../lib/helper\";\nimport ChronicleFilemStrip from \"./ChroniclesFilmStrip\";\nimport { IsChronicles } from \"../lib/config\";\n\ninterface ScrubberViewProps {\n  showIntro?: boolean;\n  width?: number;\n  height?: number;\n}\n\ninterface ScrubberViewState {\n  clipped: boolean;\n  control: boolean;\n}\n\nexport default class ScrubberView extends React.Component<ScrubberViewProps, ScrubberViewState> {\n\n  static defaultProps = {\n    width: 800,\n    height: 100,\n    isTraining: false,\n  };\n\n  constructor(props: ScrubberViewProps) {\n    super(props);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.toggleClip = this.toggleClip.bind(this);\n    this.setControl = this.setControl.bind(this);\n    this.state = {\n      control: true,\n      clipped: true,\n    };\n    diel.BindFreeze(this.setControl);\n  }\n\n  setControl(control: boolean) {\n    this.setState({control});\n  }\n\n  componentWillMount() {\n    if (IsChronicles) document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    if (IsChronicles) document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentDidMount() {\n    console.log(\"React all setup, calling tick\");\n    diel.tick()();\n  }\n\n  handleKeyDown(e: any) {\n    // arrow up/down button should select next/previous list element\n    if (e.keyCode === 38 || e.keyCode === 37) {\n      diel.Input.deltaItx({$val: -1});\n    } else if (e.keyCode === 40 || e.keyCode === 39) {\n      diel.Input.deltaItx({$val: 1});\n    }\n  }\n\n  toggleClip() {\n    this.setState((prev) => {\n      const clipped = !prev.clipped;\n      diel.LogData.eventLog({\n        $eventName: EventType[EventType.Clip],\n        $parameter: clipped\n      });\n      return {clipped};\n    });\n  }\n\n\n\nrender() {\n    let { showIntro } = this.props;\n    let { clipped, control } = this.state;\n    let delays =\n        <BarChart\n          // ref={v => this.delaysChart = v}\n          clipped={clipped}\n          showIntro={showIntro}\n          chart={\"delays\"}\n          xLabel={\"delay\"}\n          yLabel={\"count\"}\n          key={\"delays\"}\n          isCategorical={true}\n        />;\n    let state = <BarChart\n          // ref={v => this.stateChart = v}\n          clipped={clipped}\n          xLabel={\"state\"}\n          yLabel={\"count\"}\n          chart={\"state\"}\n          isCategorical={true}\n        />;\n    let carrier = <BarChart\n          // ref={v => this.carrierChart = v}\n          clipped={clipped}\n          xLabel={\"carrier\"}\n          yLabel={\"count\"}\n          chart={\"carrier\"}\n          isCategorical={true}\n        />;\n    let day = <BarChart\n        // ref={v => this.dayChart = v}\n        clipped={clipped}\n        xLabel={\"day\"}\n        yLabel={\"count\"}\n        chart={\"day\"}\n        isCategorical={false}\n        showIntro={showIntro}\n      />;\n    const slider = IsChronicles ? <ChronicleFilemStrip\n    /> : null;\n\n    // so when the item is not specified, the field is omitted\n    return <div className={`vis-portal`}>\n      <div style={{float: \"left\"}}>\n        <button\n          className=\"general-btn vis-btn \"\n          style={{width: 75}}\n          onClick={this.toggleClip}\n          >{this.state.clipped ? \"\" : \"un\"}zoom</button>\n        {IsChronicles\n          ? <button\n            className=\"general-btn vis-btn\"\n            onClick={diel.Input.deleteItx}\n            >clear history</button>\n          : null}\n      </div>\n      <br style={{clear: \"both\"}} />\n      <div id=\"all-charts\" className={`${control ? \"\" : \"dimmed\"}`}>\n        <div className=\"chart-layout-wrapper\">\n          {state}\n        </div>\n        <div className=\"chart-layout-wrapper\">\n          {day}\n        </div>\n        <div className=\"chart-layout-wrapper\">\n          {carrier}\n        </div>\n        <div className=\"chart-layout-wrapper\">\n          <div style={{overflow: \"auto\"}}>\n            {delays}\n          </div>\n        </div>\n        <div style={{clear: \"both\"}}></div>\n      </div>\n      <div className={`${control ? \"\" : \"dimmed\"}`}>\n        {slider}\n        <div style={{clear: \"both\"}}></div>\n      </div>\n    </div>;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ScrubberView.tsx","import * as React from \"react\";\n\nimport { diel } from \"../diel/setup\";\n\ninterface ResetButtonProps {\n  width: number; // width should be the same as the chart\n  chart: string;\n  disabled: boolean;\n  selection: string;\n}\n\nexport const ResetButton: React.StatelessComponent<ResetButtonProps> = (p) => {\n  if (p.selection && p.selection.length > 0) {\n    return <div style={{height: 30, width: p.width, overflow: \"hidden\"}}>\n      <button\n        style={{ marginBottom: 10 }}\n        onClick={() => diel.Input.xBrushItx({$chart: p.chart})}>\n          reset\n      </button>\n    </div>;\n  } else {\n    return <div style={{height: 30, width: p.width}}>\n    </div>;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ResetButton.tsx","import { Database, Statement } from \"sql.js\";\n\nimport { loadPage } from \"..\";\nimport { hashCompare, timeNow, log, downloadHelper } from \"../lib/dbHelper\";\nimport { generateSQLForTableCopy } from \"./dielHelper\";\nimport { setUpWorker } from \"./workerSetup\";\n\nconst FilePathPrefix = \"/dist/\";\ntype ReactFunc = (v: any) => void;\nconst charts = [\"day\", \"carrier\", \"delays\", \"state\"];\n\nconst DBFile = {\n  training: {\n    main: `${FilePathPrefix}main_training.db`,\n    worker: `${FilePathPrefix}worker_training.db`\n  },\n  task: {\n    main: `${FilePathPrefix}main_task.db`,\n    worker: `${FilePathPrefix}worker_task.db`\n  }\n};\n\n// diel should generate this as well.\nexport type XBrushItxInputType = {$chart: string, $low?: number, $high?: number, $low2?: number, $high2?: number, $selection?: string};\nexport type NavigateItxInputType = {$xFilterItxId: number};\nexport type DeltaItxInputType = {$val: number};\ntype EventLogType = {$eventName: string, $parameter?: any};\ntype ThumbnailType = {$itxId: number, $img: string};\ntype AllInputType = XBrushItxInputType\n                   | NavigateItxInputType\n                   | DeltaItxInputType\n                   | EventLogType\n                   | TaskTimesType;\ntype OutputConfig = {\n  singleRow?: boolean,\n  notNull?: boolean,\n  parameters?: any\n};\ntype TickBind = {view: string, s: Statement, f: ReactFunc, c: OutputConfig};\ntype TaskInfoType = {$qId: string, $taskType: string, $isTraining: number};\ntype MemoryTaskType = {$qId: string, $linkedQId: string};\ntype TaskTimesType = {$qId: string, $eventType: string};\ntype AnswersType = {$qId: string, $answer: string, $confidence: string, $score: number, $comment: string};\n\nconst defaultOuptConfig = {singleRow: false, notNull: false};\n\nexport default class Diel {\n  // public\n  Input: {\n    xBrushItx: (i: XBrushItxInputType) => void;\n    navigateItx: (i: NavigateItxInputType) => void;\n    deltaItx: (i: DeltaItxInputType) => void;\n    deleteItx: () => void;\n  };\n\n  LogData: {\n    thumbnail: (i: ThumbnailType) => void;\n    eventLog: (i: EventLogType) => void;\n    taskInfo: (i: TaskInfoType) => void;\n    memoryTask: (i: MemoryTaskType) => void;\n    taskTimes: (i: TaskTimesType) => void;\n    answers: (i: AnswersType) => void;\n  };\n  static readonly ItxLogsViews = [\n    // state programs\n    \"itxId_SP\", \"brushState_SP\", \"brushDep_SP\",\n    \"eqChart_SP\", \"chartDataAtomic\",\n    \"eventLog\",\n    \"thumbnail\",\n    // interactions\n    \"navigateItx\", \"deltaItx\", \"deleteItx\",\n    \"xBrushItx\"\n  ];\n\n  // these will only be deleted when the training switches to task\n  // so each time this is sent to ClearHistory, it's not cleared\n  // no need to be removed since the entire DB will be dropped\n  static readonly TaskLogsViews = [\n    // task info\n    \"memoryTask\", \"taskTimes\", \"answers\", \"taskInfo\",\n  ];\n\n  // private\n  private db: Database;\n  private buffer: Uint8Array;\n  private input: {\n    xBrushItx: Statement,\n    navigateItx: Statement,\n    deltaItx: Statement,\n    deleteItx: Statement,\n  };\n  private logData: {\n    thumbnail: Statement,\n    thumbnailRemove: Statement,\n    eventLog: Statement,\n    taskInfo: Statement,\n    memoryTask: Statement,\n    taskTimes: Statement,\n    answers: Statement,\n  };\n  private output: Map<string, Statement>;\n  // private chronOutput: Map<string, Statement>;\n  private logs: Map<string, Statement>;\n  private activeRequests: {id: string, ts: number}[];\n  deadRequests: {id: string, ts: number}[];\n  staticViews: Map<string, Statement>;\n  boundFns: TickBind[];\n  frozen: boolean;\n  frozenBind: (control: boolean) => void; // this is a bit messy\n  worker: Worker;\n  workerLoaded: boolean;\n  stateRefresh: () => void;\n\n  // public methods\n  constructor() {\n    console.log(\"Diel initializing for training\");\n    this.LoadAll(DBFile.training.main, DBFile.training.worker, true);\n    this.worker = new Worker(`./dist/worker.sql.js`);\n    this.boundFns = [];\n    this.workerLoaded = false;\n    this.activeRequests = [];\n  }\n\n  // has to be done at run time since the react functions need to be constructed.\n  BindOutput(view: string, reactFn: ReactFunc, cIn = {} as OutputConfig) {\n    // console.log(\"config\", cIn, view);\n    if (!this.output.has(view)) {\n      throw new Error(`output not defined ${view} ${Array.from(this.output.keys()).join(\", \")}`);\n    }\n    // immtable assign...\n    const c = Object.assign({}, defaultOuptConfig, cIn);\n    // console.log(\"final config\", c);\n    if (view.startsWith(\"chron\") && !cIn.parameters) throw new Error(\"chron must have params\");\n    this.boundFns.push({view, s: this.output.get(view), f: reactFn, c });\n  }\n\n  // SetStateRefresh(f: () => void) {\n  //   this.stateRefresh = f;\n  // }\n\n  GetLogs(view: string) {\n    const s = this.logs.get(view);\n    if (!s) {\n      console.log(`${view} not found in diel logs`, this.logs);\n      throw new Error(`${view} not found in diel logs`);\n    }\n    s.bind({});\n    let r = [];\n    while (s.step()) {\n      r.push(s.getAsObject());\n    }\n    return r;\n  }\n\n  GetStaticView(view: string) {\n    const s = this.staticViews.get(view);\n    s.bind({});\n    let r = [];\n    while (s.step()) {\n      r.push(s.getAsObject());\n    }\n    if (r.length === 0) {\n      throw new Error(`Static view ${view} should not be empty`);\n    }\n    return r;\n  }\n\n  LoadAll = async (mainFile: string, workerFile: string, shouldLoadPage: boolean) => {\n    console.log(\"diel Load\", mainFile, workerFile);\n    await this.loadMain(mainFile);\n    await this.loadWorker(workerFile);\n    setUpWorker(this.worker);\n    // populates all the prepared statements\n    this.setup();\n    // calls react\n    // if diel has been set up already\n    // we need to retarget all the binds\n    // basically find all the view names\n    if (this.boundFns.length > 0) {\n      this.boundFns.map(f => {\n        f.s = this.output.get(f.view);\n      });\n    }\n    this.deadRequests = [];\n    this.activeRequests = [];\n    shouldLoadPage ? loadPage() : null;\n    // forcing a tick here to refresh\n    // this.Input.xBrushItx({$chart: \"day\"});\n  }\n\n  SetFreeze(v: boolean) {\n    this.frozen = v;\n    this.frozenBind(!v);\n  }\n\n  // hmm, this is not a bad pattern\n  // avoids the jumping around\n  BindFreeze(f: (control: boolean) => void) {\n    this.frozenBind = f;\n  }\n\n  loadMain = async (mainFile: string) => {\n    // if the current db is not null, close it\n    if (this.db) {\n      this.db.close();\n    }\n    const response = await fetch(mainFile);\n    const bufferRaw = await response.arrayBuffer();\n    this.buffer = new Uint8Array(bufferRaw);\n    this.db = new Database(this.buffer);\n  }\n\n  loadWorker = async (file: string) => {\n    // first close then open\n    // based on the source code\n    // they already seem to be closing the db\n    // https://github.com/kripken/sql.js/blob/master/coffee/worker.coffee\n    const response = await fetch(file);\n    const bufferRaw = await response.arrayBuffer();\n    const buffer = new Uint8Array(bufferRaw);\n    this.worker.postMessage({\n      id: \"opened\",\n      action: \"open\",\n      buffer,\n    });\n    this.workerLoaded = true;\n  }\n\n  /**\n   * @all: problematic to delete since there might be memory tasks with dependencies\n   */\n  ClearHistory() {\n    // must be more recent that 10 seconds ago, as GC\n    this.deadRequests = this.deadRequests.concat(this.activeRequests).filter(r => r.ts > Date.now() - 10000);\n    // console.log(\"timeouts right now\", this.deadRequests);\n    const tablesWithoutItxId = [\n      // non reactive state\n      \"eqChart_SP\",\n      \"eventLog\",\n      // interactions whose itxId are different from those of the brushes\n      \"navigateItx\", \"deltaItx\", \"deleteItx\"\n    ];\n    tablesWithoutItxId.map(t => this.db.run(`delete from ${t}`));\n    const tablesWithItxId = [\n      // itx state programs\n      \"itxId_SP\", \"brushState_SP\", \"brushDep_SP\", \"dataParamHashes_SP\",\n      // data state programs\n      \"stateChartData\", \"dayChartData\", \"carrierChartData\",\n      \"delaysChartData\", \"chartDataAtomic\",\n      // brush has to be the last one due to foreign key issues\n      \"xBrushItx\",\n    ];\n    tablesWithItxId.map(t => {\n      // console.log(\"delteing\", t);\n      this.db.run(`delete from ${t} where itxId > 4`);\n    });\n    // force refresh; must via sql\n    this.db.run(`insert into tick (timestep) values (null);`);\n    // this.tick()();\n  }\n\n  processInput(s: Statement, i: AllInputType) {\n    if (this.frozen) {\n      return;\n    }\n    let tsI = Object.assign({$ts: timeNow()}, i);\n    s.run(tsI);\n  }\n\n  // the rest are private functions\n  setup() {\n    let db = this.db;\n    db.run(\"PRAGMA foreign_keys = ON;\");\n    // must do this manually because bundling minimizes the function names...\n    db.create_function(\"tick\", this.tick());\n    db.create_function(\"workerGetChartDataView\", this.workerGetChartDataView());\n    db.create_function(\"workerShareItx\", this.workerShareItx());\n    db.create_function(\"timeNow\", timeNow);\n    db.create_function(\"log\", log);\n    db.create_function(\"hashCompare\", hashCompare);\n    this.input = {\n      xBrushItx: db.prepare(`\n        insert into xBrushItx (ts, chart, low, high, low2, high2, selection)\n        values ($ts, $chart, $low, $high, $low2, $high2, $selection)`),\n      navigateItx: db.prepare(`\n        insert into navigateItx (ts, xFilterItxId)\n        values ($ts, $xFilterItxId)`),\n      deltaItx: db.prepare(`\n        insert into deltaItx (ts, val)\n        values ($ts, $val)`),\n      deleteItx: db.prepare(`\n        insert into deleteItx (ts)\n        values ($ts)`)\n    };\n    this.Input = {\n      xBrushItx: (i: XBrushItxInputType) => {\n        if (i.$low) {\n          if (isNaN(i.$high) || isNaN(i.$low) ) {\n            throw new Error(\"number has to be defined\");\n          }\n        }\n        this.processInput(this.input.xBrushItx, i);\n      },\n      navigateItx: (i: NavigateItxInputType) => {\n        this.processInput(this.input.navigateItx, i);\n      },\n      deltaItx: (i: DeltaItxInputType) => {\n        this.processInput(this.input.deltaItx, i);\n      },\n      deleteItx: () => {\n        this.input.deleteItx.run({$ts: timeNow()});\n      }\n    };\n    this.logData = {\n      thumbnail: db.prepare(`\n        insert into thumbnail (ts, itxId, img)\n        values ($ts, $itxId, $img);\n      `),\n      thumbnailRemove: db.prepare(`\n        delete from thumbnail\n        where ts < $ts and itxId = $itxId;\n      `),\n      eventLog: db.prepare(`\n        insert into eventLog (ts, eventName, parameter)\n        values ($ts, $eventName, $parameter);\n      `),\n      taskInfo: db.prepare(`\n        insert into taskInfo (qId, taskType, isTraining)\n        values ($qId, $taskType, $isTraining);\n      `),\n      taskTimes: db.prepare(`\n        insert into taskTimes (ts, qId, eventType)\n        values ($ts, $qId, $eventType);\n      `),\n      answers: db.prepare(`\n        insert into answers (qId, answer, confidence, score, comment)\n        values ($qId, $answer, $confidence, $score, $comment);\n      `),\n      memoryTask: db.prepare(`\n        insert into memoryTask (qId, linkedQId)\n        values ($qId, $linkedQId);\n      `)\n    };\n    // log data should not run process input which has freeze logic\n    this.LogData = {\n      thumbnail: (i: ThumbnailType) => {\n        let tsI = Object.assign({$ts: timeNow()}, i);\n        this.logData.thumbnail.run(tsI);\n        this.logData.thumbnailRemove.run({$ts: tsI.$ts, $itxId: i.$itxId});\n      },\n      eventLog: (i: EventLogType) => {\n        let tsI = Object.assign({$ts: timeNow()}, i);\n        this.logData.eventLog.run(tsI);\n      },\n      taskInfo: (i: TaskInfoType) => {\n        this.logData.taskInfo.run(i);\n      },\n      taskTimes: (i: TaskTimesType) => {\n        let tsI = Object.assign({$ts: timeNow()}, i);\n        this.logData.taskTimes.run(tsI);\n      },\n      answers: (i: AnswersType) => {\n        this.logData.answers.run(i);\n      },\n      memoryTask: (i: MemoryTaskType) => {\n        this.logData.memoryTask.run(i);\n      },\n    };\n    this.output = new Map();\n    // FIXME: when writing the parser, change this directly into code level\n    // since it's actually fixed at compile time\n    [\n      \"ChartSelection\", \"ChartIsLoading\", \"ChartDataView\"\n    ].map(v => {\n      charts.map(c => {\n        const view = `${c}${v}`;\n        this.output.set(view, db.prepare(`select * from ${view}`));\n      });\n    });\n    this.logs = new Map();\n    Diel.ItxLogsViews.map(v => this.logs.set(v, db.prepare(`select * from ${v}`)));\n    Diel.TaskLogsViews.map(v => this.logs.set(v, db.prepare(`select * from ${v}`)));\n    // one off ones\n    // [\"loadingSummary\", \"focusItx\"].map(v => this.output.set(v, db.prepare(`select * from ${v}`)));\n    // needs order\n    this.output.set(\"thumbnail\", db.prepare(`select * from thumbnail order by itxId asc`));\n    // set output for chronicles\n    // this output is parametrized; lets do that in react...\n    // this.chronOutput = new Map();\n    // sigh the following should be automated\n    [\"chronDayChartSelection\", \"chronCarrierChartSelection\",\n    \"chronStateChartSelection\", \"chronDelaysChartSelection\",\n    \"chronDayChartDataView\", \"chronStateChartDataView\",\n    \"chronCarrierChartDataView\", \"chronDelaysChartDataView\",\n    \"chronLoadingStatus\", \"chronChartTitle\"\n    ].map(v => {\n      this.output.set(v, db.prepare(`select * from ${v} where chronRank=$chronRank`));\n    });\n          // chronicles related\n    [\"hasMoreChron\"].map(v => this.output.set(v, db.prepare(`select * from ${v}`)));\n    // static ones\n    this.staticViews = new Map();\n    charts.map(c => {\n      const view = `${c}ChartInitData`;\n      this.staticViews.set(view, db.prepare(`select * from ${view}`));\n    });\n  }\n\n  // tick is invoked inside sql (though it can be invoked here sort of as well)\n  tick() {\n    const boundFns = this.boundFns;\n    const runOutput = this.runOutput;\n    return () => {\n      // console.log(\"ticked!\", boundFns);\n      // const tictime = performance.now();\n      boundFns.map(b => {\n        runOutput(b);\n      });\n      // console.log(\"tick took\\t\\t\", Math.round(performance.now() - tictime));\n    };\n  }\n\n  Sanity() {\n    // does some basic sanity check to help developer against dumb mistakes\n    // TODO: first is to make sure that all output views are actually bound to something.\n  }\n\n  // temp hack\n  IsDuringTask() {\n    // console.log(d(`select * from taskTimes`));\n    const r = this.db.exec(`select count(*) from taskTimes`);\n    return {\n      firstTime: r[0].values[0][0] as number === 1,\n      duringTask: (r[0].values[0][0] as number % 2) === 1\n    };\n  }\n\n  exec(sql: string) {\n    // these should be internal DIEL use\n    // e.g., worker code should also be internal\n    // console.log(\"DIEL exec\", sql);\n    return this.db.exec(sql);\n  }\n\n  workerShareItx() {\n    const worker = this.worker;\n    return () => {\n      // we are going to share currentItx\n      // a bit hard coded; need to think about the IR for moving tables around\n      const filterQuery = `SELECT * FROM currentItx`;\n      const shareSql = generateSQLForTableCopy(\"currentItx\", filterQuery);\n      worker.postMessage({\n        id: `updateCurrentItx`,\n        action: \"exec\",\n        sql: shareSql\n      });\n    };\n  }\n\n  workerGetChartDataView() {\n    const worker = this.worker;\n    return (itxId: number, chart: string) => {\n      const hash = `${timeNow()}-${itxId}=${chart}`;\n      this.activeRequests.push({id: hash, ts: Date.now()});\n      worker.postMessage({\n        id: `share:${itxId}:${chart}:${hash}`,\n        action: \"exec\",\n        sql: `SELECT * FROM ${chart}ChartDataView;`\n      });\n    };\n  }\n\n  // only because sql.js does not support user defined aggregates right now\n  runOutput(b: TickBind) {\n    // s: Statement, reactFn: ReactFunc, singleRow: boolean) {\n    // takes a statement and a react function\n    // console.log(\"updating view\", b.view);\n    // const tictime = performance.now();\n    let { s, f, c} = b;\n    if (c.parameters) {\n      s.bind(c.parameters);\n    } else {\n      s.bind({});\n    }\n    let r = [];\n    while (s.step()) {\n      r.push(s.getAsObject());\n    }\n    if (c.notNull && r.length === 0) {\n      throw new Error(`${b.view} should not be null`);\n    }\n    if (r.length > 0 && c.singleRow) {\n      f(r[0]);\n    } else {\n      f(r);\n    }\n    // console.log(`${b.view} took\\t\\t`, Math.round(performance.now() - tictime));\n    return;\n  }\n\n  ChangeToTask() {\n    this.LoadAll(DBFile.task.main, DBFile.task.worker, false);\n    console.log(\"Changed to task DB\");\n  }\n\n  TrainingZeroCount() {\n    // check if the score for answers are ALL zero\n    let r = this.db.exec(`select count(*) from answers where score = 0`);\n    return r[0].values[0][0] as number;\n  }\n\n  downloadDB() {\n    // console.log(\"download session\");\n    let dRaw = this.db.export();\n    let blob = new Blob([dRaw]);\n    downloadHelper(blob,  \"session\");\n  }\n\n  downloadWorkerDB() {\n    this.worker.postMessage({\n      id: \"download\",\n      action: \"export\",\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/diel/diel.ts","module.exports = SQL;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"SQL\"\n// module id = 14\n// module chunks = 0","import { diel } from \"./setup\";\nimport { assertQueryHasResult } from \"../lib/dbHelper\";\n\n// the input should already be from a group_concat\n// they can just specify the remote\n// to add the string properly I would need some AST representation for the query definition...\n// just going to add quotes to EVERYTHING, since sqlite seems to do the cohersion properly from string to numbers anyways...\nexport function generateSQLForTableCopy(sharedTable: string, shareQuery: string) {\n  let tableRes = diel.exec(shareQuery)[0];\n  assertQueryHasResult(tableRes, \"currentItx\");\n  // FIXME: have more robust typing here...\n  // need to make null explicit here...\n  // selection needs to have a quote around it...\n  const values = tableRes.values.map((d: any[]) => `(${d.map((v: any) => (v === null) ? \"null\" : `'${v}'`).join(\", \")})`);\n  let shareSql = `\n    DELETE from ${sharedTable};\n    INSERT INTO ${sharedTable} VALUES ${values};`;\n  return shareSql;\n}\n\n\nexport function dW(sql: string) {\n  diel.worker.postMessage({\n    id: \"print\",\n    action: \"exec\",\n    sql\n  });\n}\n(<any>window).dW = dW;\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/diel/dielHelper.ts","import * as d3 from \"d3\";\n\nimport { diel } from \"../../diel/setup\";\nimport { lightGray, lightBlue, selectedColor, brushColor,\n  RectSVGSpec, selectedBackgroundColor, ChartHelperReturnValue,\n  LinearBarChartType, RangeSelection} from \"./chartHelper\";\n\n\nexport interface LinearChartProps {\n  selection: RangeSelection;\n  baseData: LinearBarChartType;\n  data: LinearBarChartType;\n  chart: string;\n  chartWidth: number;\n  chartHeight: number;\n  clipped: boolean;\n}\n\nexport function linearChartHelper(p: LinearChartProps): ChartHelperReturnValue {\n  let { baseData, selection, data, chart, chartWidth, chartHeight, clipped } = p;\n  const unclippable = (!clipped) && data && (data.length > 0);\n\n  const yMax = unclippable ? d3.max(data, d => d.y) : d3.max(baseData, (d) => d.y)!;\n  let y = d3.scaleLinear().rangeRound([chartHeight, 0]).domain([0, yMax]);\n  const extent = d3.extent(baseData, d => d.x);\n  const numBars = (extent[1] - extent[0] + 1);\n  const xDomain = [extent[0], extent[1] + (extent[1] - extent[0]) / numBars];\n  const barWidth = chartWidth * 0.6 / numBars;\n  const x = d3.scaleLinear().rangeRound([1, chartWidth]).domain(xDomain);\n\n  const brushFn = (x1: number, x2: number) => {\n    let v1 = Math.round(x.invert(x1));\n    let v2 = Math.floor(x.invert(x2));\n    console.log(\"brush data\", v1, v2);\n    diel.Input.xBrushItx({$low: v1, $high: v2, $chart: chart});\n  };\n  const clickFn = (x: number) => () => diel.Input.xBrushItx({$low: x, $high: x, $chart: chart});\n\n  let rectsSpec: RectSVGSpec = [];\n\n  const hasSelection: boolean = (selection && selection.low) ? true : false;\n  // <rect\n  // className=\"chart-label\"\n  // x={x(selection.low)}\n  // y={y(selection.high2)}\n  // width={x(selection.high) - x(selection.low)}\n  // height={Math.abs(y(selection.high2) - y(selection.low2))}\n  // fill={\"gray\"}\n  // fill-opacity=\"0.3\"\n  // ></rect>\n\n\n  unclippable ? [] : baseData.map(d => {\n    const color = selection\n      ? (d.x <= selection.high && d.x >= selection.low)\n        ? selectedBackgroundColor\n        : lightGray\n      : lightGray;\n    rectsSpec.push({\n      x: x(d.x)!,\n      y: y(d.y)!,\n      color,\n      onClick: clickFn(d.x),\n      barWidth,\n    });\n  });\n  if (data) {\n    data.filter(d => d.y > 0).map(d => {\n      const color = selection\n        ? (d.x <= selection.high && d.x >= selection.low)\n          ? selectedColor\n          : lightBlue\n        : lightBlue;\n      rectsSpec.push({\n        x: x(d.x),\n        y: y(d.y),\n        color,\n        onClick: clickFn(d.x),\n        barWidth,\n      });\n    });\n  }\n\n  if (hasSelection) {\n    // this has to be pushed back otherwise click are going to be hard to register...\n    rectsSpec.push({\n      className: \"selector\",\n      x: Math.max(x(selection.low) - 5, 0),\n      y: 0,\n      barWidth: x(selection.high) - x(selection.low) + barWidth + 10, // need to be double of 5 duh\n      color: brushColor,\n      onClick: null\n    });\n  }\n  // console.log(`rectspec is`, chartWidth, barWidth, JSON.stringify(rectsSpec));\n  return {\n    brushFn,\n    rectsSpec,\n    x,\n    y,\n    hasSelection\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lib/chart/LinearChartHelper.ts","import * as d3 from \"d3\";\n\nimport { diel } from \"../../diel/setup\";\n\nimport { lightGray, lightBlue, selectedColor, selectedBackgroundColor, brushColor,\n  ChartHelperReturnValue, StringSelection,\n  RectSVGSpec, CategoricalBarChartType} from \"./chartHelper\";\n\nexport interface CategoricalChartProps {\n  selection: StringSelection;\n  baseData: CategoricalBarChartType;\n  data: CategoricalBarChartType;\n  chart: string;\n  chartWidth: number;\n  chartHeight: number;\n  clipped: boolean;\n}\n\nexport function CategoricalChartHelper(p: CategoricalChartProps): ChartHelperReturnValue {\n    let { baseData, selection, data, chart, chartWidth, chartHeight, clipped } = p;\n    const unclippable = (!clipped) && data && (data.length > 0);\n    // scale realted\n    const yMax = unclippable ? d3.max(data, d => d.y) : d3.max(baseData, (d) => d.y)!;\n    let y = d3.scaleLinear().rangeRound([chartHeight, 0]).domain([0, yMax]);\n    const xDomain = baseData.map(d => d.x);\n    const x = d3.scaleBand().rangeRound([0, chartWidth]).padding(0.4).domain(xDomain);\n\n    // brushing related\n    const brushFn = (x1: number, x2: number) => {\n      const selectionOrdinal = xDomain.filter(v => x(v) && (x(v)! < x2) && (x(v)! > x1)).join(\",\");\n      diel.Input.xBrushItx({$selection: selectionOrdinal, $chart: chart});\n    };\n    const clickFn = (x: string) => () => diel.Input.xBrushItx({$selection: x, $chart: chart});\n    const barWidth = x.bandwidth();\n    let rectsSpec: RectSVGSpec = [];\n    let brushBounds: number[] = [];\n    if (selection && selection.selection) {\n      selection.selection.split(\",\").map(s => brushBounds.push(x(s)));\n    }\n    // if the value is too low, then also clip on a background selection, but only at the height of half\n    baseData.map(d => {\n      rectsSpec.push({\n        x: x(d.x)!,\n        y: chartHeight / 2!,\n        color: \"rgba(0, 0, 0, 0)\",\n        onClick: clickFn(d.x),\n        barWidth,\n      });\n    });\n    unclippable ? [] : baseData.map(d => {\n      let color = lightGray;\n      if (selection && selection.selection) {\n        const selects = selection.selection.split(\",\");\n        if (selects.filter(s => s === d.x).length > 0) {\n          // console.log(\"highlighted selection\", selection.selection, d.x);\n          color = selectedBackgroundColor;\n        }\n      }\n      rectsSpec.push({\n        x: x(d.x)!, y: y(d.y)!,\n        color,\n        onClick: clickFn(d.x),\n        barWidth,\n      });\n    });\n    if (data) {\n      data.filter(d => d.y > 0).map(d => {\n        let color = lightBlue;\n        if (selection && selection.selection) {\n          const selects = selection.selection.split(\",\");\n          if (selects.filter(s => s === d.x).length > 0) {\n            color = selectedColor;\n          }\n        }\n        rectsSpec.push({\n          x: x(d.x)!, y: y(d.y)!,\n          color,\n          onClick: clickFn(d.x),\n          barWidth\n        });\n      });\n    }\n    if (brushBounds.length > 0) {\n      rectsSpec.push({\n        className: \"selector\",\n        x: Math.max(d3.min(brushBounds) - 5, 0),\n        y: 0,\n        color: brushColor,\n        barWidth: d3.max(brushBounds) - d3.min(brushBounds) + barWidth + 10,\n        onClick: null\n      });\n    }\n    const hasSelection: boolean = (selection && selection.selection) ? true : false;\n    // if (chart === \"delays\" && chartWidth < 60) {\n    //   console.log(\"rectsSpec for delays\", rectsSpec);\n    // }\n    return {\n      brushFn,\n      rectsSpec,\n      x,\n      y,\n      hasSelection\n    };\n  }\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lib/chart/CategoricalChartHelper.ts","import * as React from \"react\";\n// import { LayoutInfo } from \"../lib/chart/chartHelper\";\n// import { SvgSpinner } from \"./SvgSpinner\";\nimport { diel } from \"../diel/setup\";\nimport StripUnit from \"./StripUnit\";\n\n// type ImagesType = {itxId: number, img: string}[];\ninterface ChronicleSliderState {\n  // get all the images\n  // focusItx: number;\n  // itxIdsInfo: LoadingSummary;\n  // images: ImagesType;\n  hasEarlierChron: boolean;\n  hasLaterChron: boolean;\n}\n\nexport default class ChronicleFilemStrip extends React.Component<{}, ChronicleSliderState> {\n  constructor(props: {}) {\n    super(props);\n    this.hasMoreChron = this.hasMoreChron.bind(this);\n    this.state = {\n      hasEarlierChron: null,\n      hasLaterChron: null\n    };\n    diel.BindOutput(\"hasMoreChron\", this.hasMoreChron, {singleRow: true});\n    // this.focusItx = this.focusItx.bind(this);\n  }\n\n  // componentDidMount() {\n  //   diel.BindOutput(\"focusItx\", this.focusItx, {singleRow: true});\n  // }\n\n  hasMoreChron(data: {hasEarlier: number, hasLater: number}) {\n    // console.log(\"has more chron\", data, data.hasEarlier, data.hasEarlier === 1);\n    this.setState({\n      hasLaterChron: data.hasLater as number === 1,\n      hasEarlierChron: data.hasEarlier as number === 1\n    });\n  }\n\n  // loadingSummary(itxIdsInfo: LoadingSummary) {\n  //   console.log(\"loading summary called with info\", itxIdsInfo);\n  //   this.setState({itxIdsInfo});\n  // }\n\n  render() {\n    const { hasEarlierChron, hasLaterChron } = this.state;\n    // const { width, height } = LayoutInfo.timeLine;\n    const strips = [4, 3, 2, 1, 0].map(r => <StripUnit chronRank={r}/>);\n    const leftArrow = <span className={`${hasEarlierChron ? \"\" : \"hide\"} chronArrow`}\n        onClick={() => diel.Input.deltaItx({$val: -1})}\n      >⇦</span>;\n    const rightArrow = <span className={`${hasLaterChron ? \"\" : \"hide\"} chronArrow`}\n        onClick = {() => diel.Input.deltaItx({$val: 1})}\n      >⇨</span>;\n    return <div className=\"chronContainer\">\n      {leftArrow}\n      {strips}\n      {rightArrow}\n    </div>;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/ChroniclesFilmStrip.tsx","import * as React from \"react\";\nimport { diel } from \"../diel/setup\";\n\nimport BarChart from \"./Charts/BarChart\";\n\n\ninterface StripUnitProps {\n  chronRank: number;\n}\n\ninterface StripUnitState {\n  title: string;\n  itxId: number;\n  isFocus: boolean;\n}\n\nexport default class StripUnit extends React.Component<StripUnitProps, StripUnitState> {\n\n  constructor(props: StripUnitProps) {\n    super(props);\n    this.state = {\n      title: null,\n      itxId: null,\n      isFocus: null,\n    };\n    this.setTitle = this.setTitle.bind(this);\n    // this.setLoading = this.setLoading.bind(this);\n    const config = {\n      parameters: {\n        $chronRank: props.chronRank\n      },\n      singleRow: true\n    };\n    diel.BindOutput(\"chronChartTitle\", this.setTitle, config);\n    // diel.BindOutput(\"chronLoadingStatus\", this.setLoading, config);\n  }\n\n  setTitle(data: {title: string, itxId: number, isFocus: number}) {\n    this.setState({\n      title: data.title,\n      itxId: data.itxId,\n      isFocus: data.isFocus === 1\n    });\n  }\n\n  // setLoading(data: {loaded: number}) {\n  //   this.setState({isLoading: data.loaded === 0});\n  // }\n\n  render() {\n    const clipped = false;\n    const { chronRank } = this.props;\n    let delays =\n    <BarChart\n      clipped={clipped}\n      chart={\"chronDelays\"}\n      isChron={true}\n      chronRank={chronRank}\n      xLabel={\"delay\"}\n      yLabel={\"count\"}\n      key={\"delays\"}\n      isCategorical={true}\n    />;\n    let state = <BarChart\n      isChron={true}\n      chronRank={chronRank}\n      clipped={clipped}\n      xLabel={\"chronState\"}\n      yLabel={\"count\"}\n      chart={\"chronState\"}\n      isCategorical={true}\n    />;\n    let carrier = <BarChart\n      isChron={true}\n      chronRank={chronRank}\n      clipped={clipped}\n      xLabel={\"carrier\"}\n      yLabel={\"count\"}\n      chart={\"chronCarrier\"}\n      isCategorical={true}\n    />;\n    let day = <BarChart\n      isChron={true}\n      chronRank={chronRank}\n      clipped={clipped}\n      xLabel={\"day\"}\n      yLabel={\"count\"}\n      chart={\"chronDay\"}\n      isCategorical={false}\n    />;\n\n    let labels;\n    if (this.state.title) {\n      const l = this.state.title.split(\"&\");\n      const lDiv = [\"state\", \"day\", \"carrier\", \"delays\"].map(c => {\n        const v = l.filter(v => v.startsWith(c));\n        const v2 = v.length > 0 ? v[0].substring(c.length + 1) : \"\";\n        return <tr>\n          <td className=\"label-chart\">{c}</td>\n          <td className=\"label-value\">{v2}</td>\n          </tr>;\n      });\n      labels = <table>\n       {lDiv}\n     </table>;\n    }\n    // ? this.state.title : \"none\"\n    return <div className=\"chron\">\n      <div className={`chronInner ${this.state.isFocus ? \"chronSelected\" : \"\"}`}\n        onClick={() => diel.Input.navigateItx({$xFilterItxId: this.state.itxId})}\n      >\n        {state}\n        {day}\n        {carrier}\n        {delays}\n      </div>\n      {labels}\n    </div>;\n\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/StripUnit.tsx","export const IsChronicles = true;\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lib/config.ts","import * as React from \"react\";\nimport * as Prism from \"prismjs\";\n\nimport { diel } from \"../diel/setup\";\nimport { QueryResults } from \"sql.js\";\n\ninterface WalkthroughState {\n  step: number;\n  result?: QueryResults;\n}\n\ninterface Explanation {\n  queryShown: string;\n  // if queryRan is not defined, then nothing is ran.\n  queryRan?: string;\n  ifRefresh: boolean;\n  text: string;\n}\n\nconst Explanations: Explanation[] = [\n  {\n    queryShown: `create view dayChartInitDataView as\n      SELECT\n        day AS x,\n        COUNT(*) AS y\n      FROM flights\n      GROUP BY day;`,\n    ifRefresh: false,\n    text: `The view <i>dayChartInitDataView</i> shows using SQL to query for the static data`,\n  },\n  {\n    queryShown: `create view lastBrush as\n      select * from xBrushItx\n      where itxId = (\n        SELECT MAX(itxId) AS itxId\n        FROM xBrushItx\n      );`,\n    queryRan: `select * from lastBrush`,\n    ifRefresh: true,\n    text: `This query derives the latest brush performed; based on the last brush, we can combine with the navigation interactions to define what the combined view is next.`,\n  },\n  {\n    queryShown: `create view focusItx as\n      select b.itxId + coalesce(delta.val, 0) as itxId\n      from lastBrush b\n      left outer join (\n      select sum(val) as val\n      from deltaItx\n    ) as delta;`,\n    queryRan: `select * from focusItxRaw`,\n    ifRefresh: true,\n    text: `Here to combine the navigation with that of the delta navigation interactions, we can just add from past events. There are some additional logic for checking if navigation is out of bounds, which we omit here.`\n  },\n  {\n    queryShown: `create view currentItx as\n      select *\n      from xBrushItx b\n      where b.itxId in (\n        select componentItx\n        from brushState_SP\n        where itxId = (select itxId from focusItx)\n      );`,\n    ifRefresh: true,\n    queryRan: `select * from currentItx`,\n    text: `This query illustrates how to make use of state programs to simplify finding the brushes defined in the past. <i>brushState_SP</i> is a state program table that's modified after each <i>xBrushItx</i> to reflect the active set of selected filters. Then <i>currentIt</i> is shared with the WebWorker thread that's computing the values and the response is inserted backed into main thread db as another event---into the respective tables <i>stateChartData</i>.`\n  },\n  {\n    queryShown: `CREATE VIEW stateChartDataView AS\n      SELECT\n        f.state AS x,\n        COUNT(*) AS y\n      FROM flights f\n      JOIN (\n        select selection\n        from currentItx\n        where chart = 'carrier'\n      ) AS fCarrier\n        on (instr(fCarrier.selection, f.carrier)\n          or fCarrier.selection IS NULL)\n      JOIN (\n        select low, high\n        from currentItx\n        where chart = 'day'\n      ) AS fDay\n        on (\n          (f.day <= fDay.high and f.day >= fDay.low)\n          or fDay.low IS NULL)\n      JOIN (\n        select selection\n        from currentItx\n        where chart = 'delays'\n      ) AS fDelays\n        on (\n          instr(fDelays.selection, f.delay)\n          or fDelays.selection IS NULL\n        )\n    GROUP BY f.state\n    order by y desc;`,\n    ifRefresh: false,\n    text: `This is the query ran on the worker that takes the interact records and computes the filter as one wholistic query. Note that this unified programming model---all the way from interactions to data processing eliminates the need to transform the data from events to objects and to some query language to the backend (or workers), or worse yet, custom rolled functions instead of a standard query engine.`\n  }\n];\n\nexport default class Walkthrough extends React.Component<{}, WalkthroughState> {\n  constructor(props: {}) {\n    super(props);\n    this.next = this.next.bind(this);\n    this.prev = this.prev.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n    this.state = {\n      step: 0,\n      result: null\n    };\n    this.updateQuery();\n  }\n\n  updateQuery() {\n    const e = Explanations[this.state.step];\n    let result = null;\n    if (e.queryRan) {\n      result = diel.exec(e.queryRan)[0];\n    }\n    this.setState({result});\n  }\n  next() {\n    this.setState(prevState => ({step: prevState.step + 1 }));\n  }\n  prev() {\n    this.setState(prevState => ({step: prevState.step - 1 }));\n  }\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  render() {\n    const result = this.state.result;\n    const e = Explanations[this.state.step];\n    let resultEle: JSX.Element;\n    if (result && e.queryRan) {\n      resultEle = <table style={{fontFamily: \"courier\"}}>\n         <thead>\n           {result.columns.map(c => <th>{c}</th>)}\n         </thead>\n         <tbody>\n           {result.values.map(r => (<tr>{r.map((c, i) => {\n             let cell = result.columns[i] === \"ts\" ? new Date(c as number).getHours() + \":\" + new Date(c as number).getMinutes() + \":\" + new Date(c as number).getSeconds() : c;\n             cell = ((result.columns[i].toLowerCase().indexOf(\"lat\") > -1) || (result.columns[i].toLowerCase().indexOf(\"long\") > -1)) ? Math.round(cell as number * 100) / 100 : cell;\n             return (<td>{cell}</td>);\n           })}</tr>))}\n         </tbody>\n       </table>;\n    }\n    if (e.queryRan) {\n      const result = diel.exec(e.queryRan)[0];\n      resultEle = <table style={{fontFamily: \"courier\"}}>\n         <thead>\n           {result.columns.map(c => <th>{c}</th>)}\n         </thead>\n         <tbody>\n           {result.values.map(r => (<tr>{r.map((c, i) => {\n             let cell = result.columns[i] === \"ts\" ? new Date(c as number).getHours() + \":\" + new Date(c as number).getMinutes() + \":\" + new Date(c as number).getSeconds() : c;\n             cell = ((result.columns[i].toLowerCase().indexOf(\"lat\") > -1) || (result.columns[i].toLowerCase().indexOf(\"long\") > -1)) ? Math.round(cell as number * 100) / 100 : cell;\n             return (<td>{cell}</td>);\n           })}</tr>))}\n         </tbody>\n       </table>;\n    }\n    return <>\n      <p dangerouslySetInnerHTML={{ __html: e.text}}></p>\n      <button className=\"general-btn vis-btn\" disabled={this.state.step < 1} onClick={this.prev}>Previous</button>\n      <button className=\"general-btn vis-btn\" disabled={this.state.step >= Explanations.length - 1} onClick={this.next}>Next</button>\n      {e.ifRefresh ? <button className=\"general-btn vis-btn\" onClick={this.updateQuery}>Refresh Query</button> : null}\n      <pre>\n        <code className=\"language-sql\">\n          {e.queryShown}\n        </code>\n      </pre>\n      {resultEle}\n    </>;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/Walkthrough.tsx","module.exports = Prism;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Prism\"\n// module id = 22\n// module chunks = 0"],"sourceRoot":""}